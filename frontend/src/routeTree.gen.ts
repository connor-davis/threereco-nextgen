/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UsersIndexRouteImport } from './routes/users/index'
import { Route as TransactionsIndexRouteImport } from './routes/transactions/index'
import { Route as RolesIndexRouteImport } from './routes/roles/index'
import { Route as ProductsIndexRouteImport } from './routes/products/index'
import { Route as MaterialsIndexRouteImport } from './routes/materials/index'
import { Route as AuditLogsIndexRouteImport } from './routes/audit-logs/index'
import { Route as UsersCreateRouteImport } from './routes/users/create'
import { Route as TransactionsCreateRouteImport } from './routes/transactions/create'
import { Route as RolesCreateRouteImport } from './routes/roles/create'
import { Route as ProductsCreateRouteImport } from './routes/products/create'
import { Route as MaterialsCreateRouteImport } from './routes/materials/create'
import { Route as AuditLogsIdRouteImport } from './routes/audit-logs/$id'
import { Route as UsersIdIndexRouteImport } from './routes/users/$id/index'
import { Route as TransactionsIdIndexRouteImport } from './routes/transactions/$id/index'
import { Route as RolesIdIndexRouteImport } from './routes/roles/$id/index'
import { Route as ProductsIdIndexRouteImport } from './routes/products/$id/index'
import { Route as MaterialsIdIndexRouteImport } from './routes/materials/$id/index'
import { Route as UsersIdEditRouteImport } from './routes/users/$id/edit'
import { Route as TransactionsIdEditRouteImport } from './routes/transactions/$id/edit'
import { Route as RolesIdPermissionsRouteImport } from './routes/roles/$id/permissions'
import { Route as RolesIdEditRouteImport } from './routes/roles/$id/edit'
import { Route as ProductsIdEditRouteImport } from './routes/products/$id/edit'
import { Route as MaterialsIdEditRouteImport } from './routes/materials/$id/edit'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersIndexRoute = UsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => rootRouteImport,
} as any)
const TransactionsIndexRoute = TransactionsIndexRouteImport.update({
  id: '/transactions/',
  path: '/transactions/',
  getParentRoute: () => rootRouteImport,
} as any)
const RolesIndexRoute = RolesIndexRouteImport.update({
  id: '/roles/',
  path: '/roles/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsIndexRoute = ProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRouteImport,
} as any)
const MaterialsIndexRoute = MaterialsIndexRouteImport.update({
  id: '/materials/',
  path: '/materials/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuditLogsIndexRoute = AuditLogsIndexRouteImport.update({
  id: '/audit-logs/',
  path: '/audit-logs/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersCreateRoute = UsersCreateRouteImport.update({
  id: '/users/create',
  path: '/users/create',
  getParentRoute: () => rootRouteImport,
} as any)
const TransactionsCreateRoute = TransactionsCreateRouteImport.update({
  id: '/transactions/create',
  path: '/transactions/create',
  getParentRoute: () => rootRouteImport,
} as any)
const RolesCreateRoute = RolesCreateRouteImport.update({
  id: '/roles/create',
  path: '/roles/create',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsCreateRoute = ProductsCreateRouteImport.update({
  id: '/products/create',
  path: '/products/create',
  getParentRoute: () => rootRouteImport,
} as any)
const MaterialsCreateRoute = MaterialsCreateRouteImport.update({
  id: '/materials/create',
  path: '/materials/create',
  getParentRoute: () => rootRouteImport,
} as any)
const AuditLogsIdRoute = AuditLogsIdRouteImport.update({
  id: '/audit-logs/$id',
  path: '/audit-logs/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersIdIndexRoute = UsersIdIndexRouteImport.update({
  id: '/users/$id/',
  path: '/users/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const TransactionsIdIndexRoute = TransactionsIdIndexRouteImport.update({
  id: '/transactions/$id/',
  path: '/transactions/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const RolesIdIndexRoute = RolesIdIndexRouteImport.update({
  id: '/roles/$id/',
  path: '/roles/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsIdIndexRoute = ProductsIdIndexRouteImport.update({
  id: '/products/$id/',
  path: '/products/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const MaterialsIdIndexRoute = MaterialsIdIndexRouteImport.update({
  id: '/materials/$id/',
  path: '/materials/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersIdEditRoute = UsersIdEditRouteImport.update({
  id: '/users/$id/edit',
  path: '/users/$id/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const TransactionsIdEditRoute = TransactionsIdEditRouteImport.update({
  id: '/transactions/$id/edit',
  path: '/transactions/$id/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const RolesIdPermissionsRoute = RolesIdPermissionsRouteImport.update({
  id: '/roles/$id/permissions',
  path: '/roles/$id/permissions',
  getParentRoute: () => rootRouteImport,
} as any)
const RolesIdEditRoute = RolesIdEditRouteImport.update({
  id: '/roles/$id/edit',
  path: '/roles/$id/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsIdEditRoute = ProductsIdEditRouteImport.update({
  id: '/products/$id/edit',
  path: '/products/$id/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const MaterialsIdEditRoute = MaterialsIdEditRouteImport.update({
  id: '/materials/$id/edit',
  path: '/materials/$id/edit',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/audit-logs/$id': typeof AuditLogsIdRoute
  '/materials/create': typeof MaterialsCreateRoute
  '/products/create': typeof ProductsCreateRoute
  '/roles/create': typeof RolesCreateRoute
  '/transactions/create': typeof TransactionsCreateRoute
  '/users/create': typeof UsersCreateRoute
  '/audit-logs': typeof AuditLogsIndexRoute
  '/materials': typeof MaterialsIndexRoute
  '/products': typeof ProductsIndexRoute
  '/roles': typeof RolesIndexRoute
  '/transactions': typeof TransactionsIndexRoute
  '/users': typeof UsersIndexRoute
  '/materials/$id/edit': typeof MaterialsIdEditRoute
  '/products/$id/edit': typeof ProductsIdEditRoute
  '/roles/$id/edit': typeof RolesIdEditRoute
  '/roles/$id/permissions': typeof RolesIdPermissionsRoute
  '/transactions/$id/edit': typeof TransactionsIdEditRoute
  '/users/$id/edit': typeof UsersIdEditRoute
  '/materials/$id': typeof MaterialsIdIndexRoute
  '/products/$id': typeof ProductsIdIndexRoute
  '/roles/$id': typeof RolesIdIndexRoute
  '/transactions/$id': typeof TransactionsIdIndexRoute
  '/users/$id': typeof UsersIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/audit-logs/$id': typeof AuditLogsIdRoute
  '/materials/create': typeof MaterialsCreateRoute
  '/products/create': typeof ProductsCreateRoute
  '/roles/create': typeof RolesCreateRoute
  '/transactions/create': typeof TransactionsCreateRoute
  '/users/create': typeof UsersCreateRoute
  '/audit-logs': typeof AuditLogsIndexRoute
  '/materials': typeof MaterialsIndexRoute
  '/products': typeof ProductsIndexRoute
  '/roles': typeof RolesIndexRoute
  '/transactions': typeof TransactionsIndexRoute
  '/users': typeof UsersIndexRoute
  '/materials/$id/edit': typeof MaterialsIdEditRoute
  '/products/$id/edit': typeof ProductsIdEditRoute
  '/roles/$id/edit': typeof RolesIdEditRoute
  '/roles/$id/permissions': typeof RolesIdPermissionsRoute
  '/transactions/$id/edit': typeof TransactionsIdEditRoute
  '/users/$id/edit': typeof UsersIdEditRoute
  '/materials/$id': typeof MaterialsIdIndexRoute
  '/products/$id': typeof ProductsIdIndexRoute
  '/roles/$id': typeof RolesIdIndexRoute
  '/transactions/$id': typeof TransactionsIdIndexRoute
  '/users/$id': typeof UsersIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/audit-logs/$id': typeof AuditLogsIdRoute
  '/materials/create': typeof MaterialsCreateRoute
  '/products/create': typeof ProductsCreateRoute
  '/roles/create': typeof RolesCreateRoute
  '/transactions/create': typeof TransactionsCreateRoute
  '/users/create': typeof UsersCreateRoute
  '/audit-logs/': typeof AuditLogsIndexRoute
  '/materials/': typeof MaterialsIndexRoute
  '/products/': typeof ProductsIndexRoute
  '/roles/': typeof RolesIndexRoute
  '/transactions/': typeof TransactionsIndexRoute
  '/users/': typeof UsersIndexRoute
  '/materials/$id/edit': typeof MaterialsIdEditRoute
  '/products/$id/edit': typeof ProductsIdEditRoute
  '/roles/$id/edit': typeof RolesIdEditRoute
  '/roles/$id/permissions': typeof RolesIdPermissionsRoute
  '/transactions/$id/edit': typeof TransactionsIdEditRoute
  '/users/$id/edit': typeof UsersIdEditRoute
  '/materials/$id/': typeof MaterialsIdIndexRoute
  '/products/$id/': typeof ProductsIdIndexRoute
  '/roles/$id/': typeof RolesIdIndexRoute
  '/transactions/$id/': typeof TransactionsIdIndexRoute
  '/users/$id/': typeof UsersIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/audit-logs/$id'
    | '/materials/create'
    | '/products/create'
    | '/roles/create'
    | '/transactions/create'
    | '/users/create'
    | '/audit-logs'
    | '/materials'
    | '/products'
    | '/roles'
    | '/transactions'
    | '/users'
    | '/materials/$id/edit'
    | '/products/$id/edit'
    | '/roles/$id/edit'
    | '/roles/$id/permissions'
    | '/transactions/$id/edit'
    | '/users/$id/edit'
    | '/materials/$id'
    | '/products/$id'
    | '/roles/$id'
    | '/transactions/$id'
    | '/users/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/audit-logs/$id'
    | '/materials/create'
    | '/products/create'
    | '/roles/create'
    | '/transactions/create'
    | '/users/create'
    | '/audit-logs'
    | '/materials'
    | '/products'
    | '/roles'
    | '/transactions'
    | '/users'
    | '/materials/$id/edit'
    | '/products/$id/edit'
    | '/roles/$id/edit'
    | '/roles/$id/permissions'
    | '/transactions/$id/edit'
    | '/users/$id/edit'
    | '/materials/$id'
    | '/products/$id'
    | '/roles/$id'
    | '/transactions/$id'
    | '/users/$id'
  id:
    | '__root__'
    | '/'
    | '/audit-logs/$id'
    | '/materials/create'
    | '/products/create'
    | '/roles/create'
    | '/transactions/create'
    | '/users/create'
    | '/audit-logs/'
    | '/materials/'
    | '/products/'
    | '/roles/'
    | '/transactions/'
    | '/users/'
    | '/materials/$id/edit'
    | '/products/$id/edit'
    | '/roles/$id/edit'
    | '/roles/$id/permissions'
    | '/transactions/$id/edit'
    | '/users/$id/edit'
    | '/materials/$id/'
    | '/products/$id/'
    | '/roles/$id/'
    | '/transactions/$id/'
    | '/users/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuditLogsIdRoute: typeof AuditLogsIdRoute
  MaterialsCreateRoute: typeof MaterialsCreateRoute
  ProductsCreateRoute: typeof ProductsCreateRoute
  RolesCreateRoute: typeof RolesCreateRoute
  TransactionsCreateRoute: typeof TransactionsCreateRoute
  UsersCreateRoute: typeof UsersCreateRoute
  AuditLogsIndexRoute: typeof AuditLogsIndexRoute
  MaterialsIndexRoute: typeof MaterialsIndexRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
  RolesIndexRoute: typeof RolesIndexRoute
  TransactionsIndexRoute: typeof TransactionsIndexRoute
  UsersIndexRoute: typeof UsersIndexRoute
  MaterialsIdEditRoute: typeof MaterialsIdEditRoute
  ProductsIdEditRoute: typeof ProductsIdEditRoute
  RolesIdEditRoute: typeof RolesIdEditRoute
  RolesIdPermissionsRoute: typeof RolesIdPermissionsRoute
  TransactionsIdEditRoute: typeof TransactionsIdEditRoute
  UsersIdEditRoute: typeof UsersIdEditRoute
  MaterialsIdIndexRoute: typeof MaterialsIdIndexRoute
  ProductsIdIndexRoute: typeof ProductsIdIndexRoute
  RolesIdIndexRoute: typeof RolesIdIndexRoute
  TransactionsIdIndexRoute: typeof TransactionsIdIndexRoute
  UsersIdIndexRoute: typeof UsersIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/': {
      id: '/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/transactions/': {
      id: '/transactions/'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof TransactionsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/roles/': {
      id: '/roles/'
      path: '/roles'
      fullPath: '/roles'
      preLoaderRoute: typeof RolesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/materials/': {
      id: '/materials/'
      path: '/materials'
      fullPath: '/materials'
      preLoaderRoute: typeof MaterialsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/audit-logs/': {
      id: '/audit-logs/'
      path: '/audit-logs'
      fullPath: '/audit-logs'
      preLoaderRoute: typeof AuditLogsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/create': {
      id: '/users/create'
      path: '/users/create'
      fullPath: '/users/create'
      preLoaderRoute: typeof UsersCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/transactions/create': {
      id: '/transactions/create'
      path: '/transactions/create'
      fullPath: '/transactions/create'
      preLoaderRoute: typeof TransactionsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/roles/create': {
      id: '/roles/create'
      path: '/roles/create'
      fullPath: '/roles/create'
      preLoaderRoute: typeof RolesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/create': {
      id: '/products/create'
      path: '/products/create'
      fullPath: '/products/create'
      preLoaderRoute: typeof ProductsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/materials/create': {
      id: '/materials/create'
      path: '/materials/create'
      fullPath: '/materials/create'
      preLoaderRoute: typeof MaterialsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/audit-logs/$id': {
      id: '/audit-logs/$id'
      path: '/audit-logs/$id'
      fullPath: '/audit-logs/$id'
      preLoaderRoute: typeof AuditLogsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/$id/': {
      id: '/users/$id/'
      path: '/users/$id'
      fullPath: '/users/$id'
      preLoaderRoute: typeof UsersIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/transactions/$id/': {
      id: '/transactions/$id/'
      path: '/transactions/$id'
      fullPath: '/transactions/$id'
      preLoaderRoute: typeof TransactionsIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/roles/$id/': {
      id: '/roles/$id/'
      path: '/roles/$id'
      fullPath: '/roles/$id'
      preLoaderRoute: typeof RolesIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/$id/': {
      id: '/products/$id/'
      path: '/products/$id'
      fullPath: '/products/$id'
      preLoaderRoute: typeof ProductsIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/materials/$id/': {
      id: '/materials/$id/'
      path: '/materials/$id'
      fullPath: '/materials/$id'
      preLoaderRoute: typeof MaterialsIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/$id/edit': {
      id: '/users/$id/edit'
      path: '/users/$id/edit'
      fullPath: '/users/$id/edit'
      preLoaderRoute: typeof UsersIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/transactions/$id/edit': {
      id: '/transactions/$id/edit'
      path: '/transactions/$id/edit'
      fullPath: '/transactions/$id/edit'
      preLoaderRoute: typeof TransactionsIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/roles/$id/permissions': {
      id: '/roles/$id/permissions'
      path: '/roles/$id/permissions'
      fullPath: '/roles/$id/permissions'
      preLoaderRoute: typeof RolesIdPermissionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/roles/$id/edit': {
      id: '/roles/$id/edit'
      path: '/roles/$id/edit'
      fullPath: '/roles/$id/edit'
      preLoaderRoute: typeof RolesIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/$id/edit': {
      id: '/products/$id/edit'
      path: '/products/$id/edit'
      fullPath: '/products/$id/edit'
      preLoaderRoute: typeof ProductsIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/materials/$id/edit': {
      id: '/materials/$id/edit'
      path: '/materials/$id/edit'
      fullPath: '/materials/$id/edit'
      preLoaderRoute: typeof MaterialsIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuditLogsIdRoute: AuditLogsIdRoute,
  MaterialsCreateRoute: MaterialsCreateRoute,
  ProductsCreateRoute: ProductsCreateRoute,
  RolesCreateRoute: RolesCreateRoute,
  TransactionsCreateRoute: TransactionsCreateRoute,
  UsersCreateRoute: UsersCreateRoute,
  AuditLogsIndexRoute: AuditLogsIndexRoute,
  MaterialsIndexRoute: MaterialsIndexRoute,
  ProductsIndexRoute: ProductsIndexRoute,
  RolesIndexRoute: RolesIndexRoute,
  TransactionsIndexRoute: TransactionsIndexRoute,
  UsersIndexRoute: UsersIndexRoute,
  MaterialsIdEditRoute: MaterialsIdEditRoute,
  ProductsIdEditRoute: ProductsIdEditRoute,
  RolesIdEditRoute: RolesIdEditRoute,
  RolesIdPermissionsRoute: RolesIdPermissionsRoute,
  TransactionsIdEditRoute: TransactionsIdEditRoute,
  UsersIdEditRoute: UsersIdEditRoute,
  MaterialsIdIndexRoute: MaterialsIdIndexRoute,
  ProductsIdIndexRoute: ProductsIdIndexRoute,
  RolesIdIndexRoute: RolesIdIndexRoute,
  TransactionsIdIndexRoute: TransactionsIdIndexRoute,
  UsersIdIndexRoute: UsersIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
