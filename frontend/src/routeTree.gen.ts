/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as NoauthRouteImport } from './routes/_noauth'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthIndexRouteImport } from './routes/_auth/index'
import { Route as NoauthSignUpRouteImport } from './routes/_noauth/sign-up'
import { Route as NoauthSignInRouteImport } from './routes/_noauth/sign-in'
import { Route as AuthCollectorRouteImport } from './routes/_auth/collector'
import { Route as AuthBusinessRouteImport } from './routes/_auth/business'
import { Route as AuthAdminRouteImport } from './routes/_auth/admin'
import { Route as AuthMfaRouteImport } from './routes/_auth/_mfa'
import { Route as AuthCollectorIndexRouteImport } from './routes/_auth/collector/index'
import { Route as AuthBusinessIndexRouteImport } from './routes/_auth/business/index'
import { Route as AuthAdminIndexRouteImport } from './routes/_auth/admin/index'
import { Route as AuthBusinessUsersIndexRouteImport } from './routes/_auth/business/users/index'
import { Route as AuthBusinessTransactionsIndexRouteImport } from './routes/_auth/business/transactions/index'
import { Route as AuthBusinessCollectionsIndexRouteImport } from './routes/_auth/business/collections/index'
import { Route as AuthAdminUsersIndexRouteImport } from './routes/_auth/admin/users/index'
import { Route as AuthAdminTransactionsIndexRouteImport } from './routes/_auth/admin/transactions/index'
import { Route as AuthAdminRolesIndexRouteImport } from './routes/_auth/admin/roles/index'
import { Route as AuthAdminMaterialsIndexRouteImport } from './routes/_auth/admin/materials/index'
import { Route as AuthAdminCollectionsIndexRouteImport } from './routes/_auth/admin/collections/index'
import { Route as AuthAdminBusinessesIndexRouteImport } from './routes/_auth/admin/businesses/index'
import { Route as AuthBusinessUsersCreateRouteImport } from './routes/_auth/business/users/create'
import { Route as AuthBusinessTransactionsCreateRouteImport } from './routes/_auth/business/transactions/create'
import { Route as AuthAdminUsersCreateRouteImport } from './routes/_auth/admin/users/create'
import { Route as AuthAdminTransactionsCreateRouteImport } from './routes/_auth/admin/transactions/create'
import { Route as AuthAdminRolesCreateRouteImport } from './routes/_auth/admin/roles/create'
import { Route as AuthAdminMaterialsCreateRouteImport } from './routes/_auth/admin/materials/create'
import { Route as AuthAdminCollectionsCreateRouteImport } from './routes/_auth/admin/collections/create'
import { Route as AuthAdminBusinessesCreateRouteImport } from './routes/_auth/admin/businesses/create'
import { Route as AuthMfaMfaVerifyRouteImport } from './routes/_auth/_mfa/mfa/verify'
import { Route as AuthMfaMfaEnableRouteImport } from './routes/_auth/_mfa/mfa/enable'
import { Route as AuthBusinessUsersIdEditRouteImport } from './routes/_auth/business/users/$id/edit'
import { Route as AuthBusinessTransactionsIdEditRouteImport } from './routes/_auth/business/transactions/$id/edit'
import { Route as AuthAdminUsersIdEditRouteImport } from './routes/_auth/admin/users/$id/edit'
import { Route as AuthAdminTransactionsIdEditRouteImport } from './routes/_auth/admin/transactions/$id/edit'
import { Route as AuthAdminRolesIdPermissionsRouteImport } from './routes/_auth/admin/roles/$id/permissions'
import { Route as AuthAdminRolesIdEditRouteImport } from './routes/_auth/admin/roles/$id/edit'
import { Route as AuthAdminMaterialsIdEditRouteImport } from './routes/_auth/admin/materials/$id/edit'
import { Route as AuthAdminCollectionsIdEditRouteImport } from './routes/_auth/admin/collections/$id/edit'
import { Route as AuthAdminBusinessesIdEditRouteImport } from './routes/_auth/admin/businesses/$id/edit'

const NoauthRoute = NoauthRouteImport.update({
  id: '/_noauth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const NoauthSignUpRoute = NoauthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => NoauthRoute,
} as any)
const NoauthSignInRoute = NoauthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => NoauthRoute,
} as any)
const AuthCollectorRoute = AuthCollectorRouteImport.update({
  id: '/collector',
  path: '/collector',
  getParentRoute: () => AuthRoute,
} as any)
const AuthBusinessRoute = AuthBusinessRouteImport.update({
  id: '/business',
  path: '/business',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAdminRoute = AuthAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AuthRoute,
} as any)
const AuthMfaRoute = AuthMfaRouteImport.update({
  id: '/_mfa',
  getParentRoute: () => AuthRoute,
} as any)
const AuthCollectorIndexRoute = AuthCollectorIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthCollectorRoute,
} as any)
const AuthBusinessIndexRoute = AuthBusinessIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthBusinessRoute,
} as any)
const AuthAdminIndexRoute = AuthAdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthAdminRoute,
} as any)
const AuthBusinessUsersIndexRoute = AuthBusinessUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthBusinessRoute,
} as any)
const AuthBusinessTransactionsIndexRoute =
  AuthBusinessTransactionsIndexRouteImport.update({
    id: '/transactions/',
    path: '/transactions/',
    getParentRoute: () => AuthBusinessRoute,
  } as any)
const AuthBusinessCollectionsIndexRoute =
  AuthBusinessCollectionsIndexRouteImport.update({
    id: '/collections/',
    path: '/collections/',
    getParentRoute: () => AuthBusinessRoute,
  } as any)
const AuthAdminUsersIndexRoute = AuthAdminUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthAdminRoute,
} as any)
const AuthAdminTransactionsIndexRoute =
  AuthAdminTransactionsIndexRouteImport.update({
    id: '/transactions/',
    path: '/transactions/',
    getParentRoute: () => AuthAdminRoute,
  } as any)
const AuthAdminRolesIndexRoute = AuthAdminRolesIndexRouteImport.update({
  id: '/roles/',
  path: '/roles/',
  getParentRoute: () => AuthAdminRoute,
} as any)
const AuthAdminMaterialsIndexRoute = AuthAdminMaterialsIndexRouteImport.update({
  id: '/materials/',
  path: '/materials/',
  getParentRoute: () => AuthAdminRoute,
} as any)
const AuthAdminCollectionsIndexRoute =
  AuthAdminCollectionsIndexRouteImport.update({
    id: '/collections/',
    path: '/collections/',
    getParentRoute: () => AuthAdminRoute,
  } as any)
const AuthAdminBusinessesIndexRoute =
  AuthAdminBusinessesIndexRouteImport.update({
    id: '/businesses/',
    path: '/businesses/',
    getParentRoute: () => AuthAdminRoute,
  } as any)
const AuthBusinessUsersCreateRoute = AuthBusinessUsersCreateRouteImport.update({
  id: '/users/create',
  path: '/users/create',
  getParentRoute: () => AuthBusinessRoute,
} as any)
const AuthBusinessTransactionsCreateRoute =
  AuthBusinessTransactionsCreateRouteImport.update({
    id: '/transactions/create',
    path: '/transactions/create',
    getParentRoute: () => AuthBusinessRoute,
  } as any)
const AuthAdminUsersCreateRoute = AuthAdminUsersCreateRouteImport.update({
  id: '/users/create',
  path: '/users/create',
  getParentRoute: () => AuthAdminRoute,
} as any)
const AuthAdminTransactionsCreateRoute =
  AuthAdminTransactionsCreateRouteImport.update({
    id: '/transactions/create',
    path: '/transactions/create',
    getParentRoute: () => AuthAdminRoute,
  } as any)
const AuthAdminRolesCreateRoute = AuthAdminRolesCreateRouteImport.update({
  id: '/roles/create',
  path: '/roles/create',
  getParentRoute: () => AuthAdminRoute,
} as any)
const AuthAdminMaterialsCreateRoute =
  AuthAdminMaterialsCreateRouteImport.update({
    id: '/materials/create',
    path: '/materials/create',
    getParentRoute: () => AuthAdminRoute,
  } as any)
const AuthAdminCollectionsCreateRoute =
  AuthAdminCollectionsCreateRouteImport.update({
    id: '/collections/create',
    path: '/collections/create',
    getParentRoute: () => AuthAdminRoute,
  } as any)
const AuthAdminBusinessesCreateRoute =
  AuthAdminBusinessesCreateRouteImport.update({
    id: '/businesses/create',
    path: '/businesses/create',
    getParentRoute: () => AuthAdminRoute,
  } as any)
const AuthMfaMfaVerifyRoute = AuthMfaMfaVerifyRouteImport.update({
  id: '/mfa/verify',
  path: '/mfa/verify',
  getParentRoute: () => AuthMfaRoute,
} as any)
const AuthMfaMfaEnableRoute = AuthMfaMfaEnableRouteImport.update({
  id: '/mfa/enable',
  path: '/mfa/enable',
  getParentRoute: () => AuthMfaRoute,
} as any)
const AuthBusinessUsersIdEditRoute = AuthBusinessUsersIdEditRouteImport.update({
  id: '/users/$id/edit',
  path: '/users/$id/edit',
  getParentRoute: () => AuthBusinessRoute,
} as any)
const AuthBusinessTransactionsIdEditRoute =
  AuthBusinessTransactionsIdEditRouteImport.update({
    id: '/transactions/$id/edit',
    path: '/transactions/$id/edit',
    getParentRoute: () => AuthBusinessRoute,
  } as any)
const AuthAdminUsersIdEditRoute = AuthAdminUsersIdEditRouteImport.update({
  id: '/users/$id/edit',
  path: '/users/$id/edit',
  getParentRoute: () => AuthAdminRoute,
} as any)
const AuthAdminTransactionsIdEditRoute =
  AuthAdminTransactionsIdEditRouteImport.update({
    id: '/transactions/$id/edit',
    path: '/transactions/$id/edit',
    getParentRoute: () => AuthAdminRoute,
  } as any)
const AuthAdminRolesIdPermissionsRoute =
  AuthAdminRolesIdPermissionsRouteImport.update({
    id: '/roles/$id/permissions',
    path: '/roles/$id/permissions',
    getParentRoute: () => AuthAdminRoute,
  } as any)
const AuthAdminRolesIdEditRoute = AuthAdminRolesIdEditRouteImport.update({
  id: '/roles/$id/edit',
  path: '/roles/$id/edit',
  getParentRoute: () => AuthAdminRoute,
} as any)
const AuthAdminMaterialsIdEditRoute =
  AuthAdminMaterialsIdEditRouteImport.update({
    id: '/materials/$id/edit',
    path: '/materials/$id/edit',
    getParentRoute: () => AuthAdminRoute,
  } as any)
const AuthAdminCollectionsIdEditRoute =
  AuthAdminCollectionsIdEditRouteImport.update({
    id: '/collections/$id/edit',
    path: '/collections/$id/edit',
    getParentRoute: () => AuthAdminRoute,
  } as any)
const AuthAdminBusinessesIdEditRoute =
  AuthAdminBusinessesIdEditRouteImport.update({
    id: '/businesses/$id/edit',
    path: '/businesses/$id/edit',
    getParentRoute: () => AuthAdminRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/admin': typeof AuthAdminRouteWithChildren
  '/business': typeof AuthBusinessRouteWithChildren
  '/collector': typeof AuthCollectorRouteWithChildren
  '/sign-in': typeof NoauthSignInRoute
  '/sign-up': typeof NoauthSignUpRoute
  '/': typeof AuthIndexRoute
  '/admin/': typeof AuthAdminIndexRoute
  '/business/': typeof AuthBusinessIndexRoute
  '/collector/': typeof AuthCollectorIndexRoute
  '/mfa/enable': typeof AuthMfaMfaEnableRoute
  '/mfa/verify': typeof AuthMfaMfaVerifyRoute
  '/admin/businesses/create': typeof AuthAdminBusinessesCreateRoute
  '/admin/collections/create': typeof AuthAdminCollectionsCreateRoute
  '/admin/materials/create': typeof AuthAdminMaterialsCreateRoute
  '/admin/roles/create': typeof AuthAdminRolesCreateRoute
  '/admin/transactions/create': typeof AuthAdminTransactionsCreateRoute
  '/admin/users/create': typeof AuthAdminUsersCreateRoute
  '/business/transactions/create': typeof AuthBusinessTransactionsCreateRoute
  '/business/users/create': typeof AuthBusinessUsersCreateRoute
  '/admin/businesses': typeof AuthAdminBusinessesIndexRoute
  '/admin/collections': typeof AuthAdminCollectionsIndexRoute
  '/admin/materials': typeof AuthAdminMaterialsIndexRoute
  '/admin/roles': typeof AuthAdminRolesIndexRoute
  '/admin/transactions': typeof AuthAdminTransactionsIndexRoute
  '/admin/users': typeof AuthAdminUsersIndexRoute
  '/business/collections': typeof AuthBusinessCollectionsIndexRoute
  '/business/transactions': typeof AuthBusinessTransactionsIndexRoute
  '/business/users': typeof AuthBusinessUsersIndexRoute
  '/admin/businesses/$id/edit': typeof AuthAdminBusinessesIdEditRoute
  '/admin/collections/$id/edit': typeof AuthAdminCollectionsIdEditRoute
  '/admin/materials/$id/edit': typeof AuthAdminMaterialsIdEditRoute
  '/admin/roles/$id/edit': typeof AuthAdminRolesIdEditRoute
  '/admin/roles/$id/permissions': typeof AuthAdminRolesIdPermissionsRoute
  '/admin/transactions/$id/edit': typeof AuthAdminTransactionsIdEditRoute
  '/admin/users/$id/edit': typeof AuthAdminUsersIdEditRoute
  '/business/transactions/$id/edit': typeof AuthBusinessTransactionsIdEditRoute
  '/business/users/$id/edit': typeof AuthBusinessUsersIdEditRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof NoauthSignInRoute
  '/sign-up': typeof NoauthSignUpRoute
  '/': typeof AuthIndexRoute
  '/admin': typeof AuthAdminIndexRoute
  '/business': typeof AuthBusinessIndexRoute
  '/collector': typeof AuthCollectorIndexRoute
  '/mfa/enable': typeof AuthMfaMfaEnableRoute
  '/mfa/verify': typeof AuthMfaMfaVerifyRoute
  '/admin/businesses/create': typeof AuthAdminBusinessesCreateRoute
  '/admin/collections/create': typeof AuthAdminCollectionsCreateRoute
  '/admin/materials/create': typeof AuthAdminMaterialsCreateRoute
  '/admin/roles/create': typeof AuthAdminRolesCreateRoute
  '/admin/transactions/create': typeof AuthAdminTransactionsCreateRoute
  '/admin/users/create': typeof AuthAdminUsersCreateRoute
  '/business/transactions/create': typeof AuthBusinessTransactionsCreateRoute
  '/business/users/create': typeof AuthBusinessUsersCreateRoute
  '/admin/businesses': typeof AuthAdminBusinessesIndexRoute
  '/admin/collections': typeof AuthAdminCollectionsIndexRoute
  '/admin/materials': typeof AuthAdminMaterialsIndexRoute
  '/admin/roles': typeof AuthAdminRolesIndexRoute
  '/admin/transactions': typeof AuthAdminTransactionsIndexRoute
  '/admin/users': typeof AuthAdminUsersIndexRoute
  '/business/collections': typeof AuthBusinessCollectionsIndexRoute
  '/business/transactions': typeof AuthBusinessTransactionsIndexRoute
  '/business/users': typeof AuthBusinessUsersIndexRoute
  '/admin/businesses/$id/edit': typeof AuthAdminBusinessesIdEditRoute
  '/admin/collections/$id/edit': typeof AuthAdminCollectionsIdEditRoute
  '/admin/materials/$id/edit': typeof AuthAdminMaterialsIdEditRoute
  '/admin/roles/$id/edit': typeof AuthAdminRolesIdEditRoute
  '/admin/roles/$id/permissions': typeof AuthAdminRolesIdPermissionsRoute
  '/admin/transactions/$id/edit': typeof AuthAdminTransactionsIdEditRoute
  '/admin/users/$id/edit': typeof AuthAdminUsersIdEditRoute
  '/business/transactions/$id/edit': typeof AuthBusinessTransactionsIdEditRoute
  '/business/users/$id/edit': typeof AuthBusinessUsersIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_noauth': typeof NoauthRouteWithChildren
  '/_auth/_mfa': typeof AuthMfaRouteWithChildren
  '/_auth/admin': typeof AuthAdminRouteWithChildren
  '/_auth/business': typeof AuthBusinessRouteWithChildren
  '/_auth/collector': typeof AuthCollectorRouteWithChildren
  '/_noauth/sign-in': typeof NoauthSignInRoute
  '/_noauth/sign-up': typeof NoauthSignUpRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/admin/': typeof AuthAdminIndexRoute
  '/_auth/business/': typeof AuthBusinessIndexRoute
  '/_auth/collector/': typeof AuthCollectorIndexRoute
  '/_auth/_mfa/mfa/enable': typeof AuthMfaMfaEnableRoute
  '/_auth/_mfa/mfa/verify': typeof AuthMfaMfaVerifyRoute
  '/_auth/admin/businesses/create': typeof AuthAdminBusinessesCreateRoute
  '/_auth/admin/collections/create': typeof AuthAdminCollectionsCreateRoute
  '/_auth/admin/materials/create': typeof AuthAdminMaterialsCreateRoute
  '/_auth/admin/roles/create': typeof AuthAdminRolesCreateRoute
  '/_auth/admin/transactions/create': typeof AuthAdminTransactionsCreateRoute
  '/_auth/admin/users/create': typeof AuthAdminUsersCreateRoute
  '/_auth/business/transactions/create': typeof AuthBusinessTransactionsCreateRoute
  '/_auth/business/users/create': typeof AuthBusinessUsersCreateRoute
  '/_auth/admin/businesses/': typeof AuthAdminBusinessesIndexRoute
  '/_auth/admin/collections/': typeof AuthAdminCollectionsIndexRoute
  '/_auth/admin/materials/': typeof AuthAdminMaterialsIndexRoute
  '/_auth/admin/roles/': typeof AuthAdminRolesIndexRoute
  '/_auth/admin/transactions/': typeof AuthAdminTransactionsIndexRoute
  '/_auth/admin/users/': typeof AuthAdminUsersIndexRoute
  '/_auth/business/collections/': typeof AuthBusinessCollectionsIndexRoute
  '/_auth/business/transactions/': typeof AuthBusinessTransactionsIndexRoute
  '/_auth/business/users/': typeof AuthBusinessUsersIndexRoute
  '/_auth/admin/businesses/$id/edit': typeof AuthAdminBusinessesIdEditRoute
  '/_auth/admin/collections/$id/edit': typeof AuthAdminCollectionsIdEditRoute
  '/_auth/admin/materials/$id/edit': typeof AuthAdminMaterialsIdEditRoute
  '/_auth/admin/roles/$id/edit': typeof AuthAdminRolesIdEditRoute
  '/_auth/admin/roles/$id/permissions': typeof AuthAdminRolesIdPermissionsRoute
  '/_auth/admin/transactions/$id/edit': typeof AuthAdminTransactionsIdEditRoute
  '/_auth/admin/users/$id/edit': typeof AuthAdminUsersIdEditRoute
  '/_auth/business/transactions/$id/edit': typeof AuthBusinessTransactionsIdEditRoute
  '/_auth/business/users/$id/edit': typeof AuthBusinessUsersIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/admin'
    | '/business'
    | '/collector'
    | '/sign-in'
    | '/sign-up'
    | '/'
    | '/admin/'
    | '/business/'
    | '/collector/'
    | '/mfa/enable'
    | '/mfa/verify'
    | '/admin/businesses/create'
    | '/admin/collections/create'
    | '/admin/materials/create'
    | '/admin/roles/create'
    | '/admin/transactions/create'
    | '/admin/users/create'
    | '/business/transactions/create'
    | '/business/users/create'
    | '/admin/businesses'
    | '/admin/collections'
    | '/admin/materials'
    | '/admin/roles'
    | '/admin/transactions'
    | '/admin/users'
    | '/business/collections'
    | '/business/transactions'
    | '/business/users'
    | '/admin/businesses/$id/edit'
    | '/admin/collections/$id/edit'
    | '/admin/materials/$id/edit'
    | '/admin/roles/$id/edit'
    | '/admin/roles/$id/permissions'
    | '/admin/transactions/$id/edit'
    | '/admin/users/$id/edit'
    | '/business/transactions/$id/edit'
    | '/business/users/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sign-in'
    | '/sign-up'
    | '/'
    | '/admin'
    | '/business'
    | '/collector'
    | '/mfa/enable'
    | '/mfa/verify'
    | '/admin/businesses/create'
    | '/admin/collections/create'
    | '/admin/materials/create'
    | '/admin/roles/create'
    | '/admin/transactions/create'
    | '/admin/users/create'
    | '/business/transactions/create'
    | '/business/users/create'
    | '/admin/businesses'
    | '/admin/collections'
    | '/admin/materials'
    | '/admin/roles'
    | '/admin/transactions'
    | '/admin/users'
    | '/business/collections'
    | '/business/transactions'
    | '/business/users'
    | '/admin/businesses/$id/edit'
    | '/admin/collections/$id/edit'
    | '/admin/materials/$id/edit'
    | '/admin/roles/$id/edit'
    | '/admin/roles/$id/permissions'
    | '/admin/transactions/$id/edit'
    | '/admin/users/$id/edit'
    | '/business/transactions/$id/edit'
    | '/business/users/$id/edit'
  id:
    | '__root__'
    | '/_auth'
    | '/_noauth'
    | '/_auth/_mfa'
    | '/_auth/admin'
    | '/_auth/business'
    | '/_auth/collector'
    | '/_noauth/sign-in'
    | '/_noauth/sign-up'
    | '/_auth/'
    | '/_auth/admin/'
    | '/_auth/business/'
    | '/_auth/collector/'
    | '/_auth/_mfa/mfa/enable'
    | '/_auth/_mfa/mfa/verify'
    | '/_auth/admin/businesses/create'
    | '/_auth/admin/collections/create'
    | '/_auth/admin/materials/create'
    | '/_auth/admin/roles/create'
    | '/_auth/admin/transactions/create'
    | '/_auth/admin/users/create'
    | '/_auth/business/transactions/create'
    | '/_auth/business/users/create'
    | '/_auth/admin/businesses/'
    | '/_auth/admin/collections/'
    | '/_auth/admin/materials/'
    | '/_auth/admin/roles/'
    | '/_auth/admin/transactions/'
    | '/_auth/admin/users/'
    | '/_auth/business/collections/'
    | '/_auth/business/transactions/'
    | '/_auth/business/users/'
    | '/_auth/admin/businesses/$id/edit'
    | '/_auth/admin/collections/$id/edit'
    | '/_auth/admin/materials/$id/edit'
    | '/_auth/admin/roles/$id/edit'
    | '/_auth/admin/roles/$id/permissions'
    | '/_auth/admin/transactions/$id/edit'
    | '/_auth/admin/users/$id/edit'
    | '/_auth/business/transactions/$id/edit'
    | '/_auth/business/users/$id/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  NoauthRoute: typeof NoauthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_noauth': {
      id: '/_noauth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NoauthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_noauth/sign-up': {
      id: '/_noauth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof NoauthSignUpRouteImport
      parentRoute: typeof NoauthRoute
    }
    '/_noauth/sign-in': {
      id: '/_noauth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof NoauthSignInRouteImport
      parentRoute: typeof NoauthRoute
    }
    '/_auth/collector': {
      id: '/_auth/collector'
      path: '/collector'
      fullPath: '/collector'
      preLoaderRoute: typeof AuthCollectorRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/business': {
      id: '/_auth/business'
      path: '/business'
      fullPath: '/business'
      preLoaderRoute: typeof AuthBusinessRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/admin': {
      id: '/_auth/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthAdminRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/_mfa': {
      id: '/_auth/_mfa'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthMfaRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/collector/': {
      id: '/_auth/collector/'
      path: '/'
      fullPath: '/collector/'
      preLoaderRoute: typeof AuthCollectorIndexRouteImport
      parentRoute: typeof AuthCollectorRoute
    }
    '/_auth/business/': {
      id: '/_auth/business/'
      path: '/'
      fullPath: '/business/'
      preLoaderRoute: typeof AuthBusinessIndexRouteImport
      parentRoute: typeof AuthBusinessRoute
    }
    '/_auth/admin/': {
      id: '/_auth/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AuthAdminIndexRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/business/users/': {
      id: '/_auth/business/users/'
      path: '/users'
      fullPath: '/business/users'
      preLoaderRoute: typeof AuthBusinessUsersIndexRouteImport
      parentRoute: typeof AuthBusinessRoute
    }
    '/_auth/business/transactions/': {
      id: '/_auth/business/transactions/'
      path: '/transactions'
      fullPath: '/business/transactions'
      preLoaderRoute: typeof AuthBusinessTransactionsIndexRouteImport
      parentRoute: typeof AuthBusinessRoute
    }
    '/_auth/business/collections/': {
      id: '/_auth/business/collections/'
      path: '/collections'
      fullPath: '/business/collections'
      preLoaderRoute: typeof AuthBusinessCollectionsIndexRouteImport
      parentRoute: typeof AuthBusinessRoute
    }
    '/_auth/admin/users/': {
      id: '/_auth/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AuthAdminUsersIndexRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/transactions/': {
      id: '/_auth/admin/transactions/'
      path: '/transactions'
      fullPath: '/admin/transactions'
      preLoaderRoute: typeof AuthAdminTransactionsIndexRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/roles/': {
      id: '/_auth/admin/roles/'
      path: '/roles'
      fullPath: '/admin/roles'
      preLoaderRoute: typeof AuthAdminRolesIndexRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/materials/': {
      id: '/_auth/admin/materials/'
      path: '/materials'
      fullPath: '/admin/materials'
      preLoaderRoute: typeof AuthAdminMaterialsIndexRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/collections/': {
      id: '/_auth/admin/collections/'
      path: '/collections'
      fullPath: '/admin/collections'
      preLoaderRoute: typeof AuthAdminCollectionsIndexRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/businesses/': {
      id: '/_auth/admin/businesses/'
      path: '/businesses'
      fullPath: '/admin/businesses'
      preLoaderRoute: typeof AuthAdminBusinessesIndexRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/business/users/create': {
      id: '/_auth/business/users/create'
      path: '/users/create'
      fullPath: '/business/users/create'
      preLoaderRoute: typeof AuthBusinessUsersCreateRouteImport
      parentRoute: typeof AuthBusinessRoute
    }
    '/_auth/business/transactions/create': {
      id: '/_auth/business/transactions/create'
      path: '/transactions/create'
      fullPath: '/business/transactions/create'
      preLoaderRoute: typeof AuthBusinessTransactionsCreateRouteImport
      parentRoute: typeof AuthBusinessRoute
    }
    '/_auth/admin/users/create': {
      id: '/_auth/admin/users/create'
      path: '/users/create'
      fullPath: '/admin/users/create'
      preLoaderRoute: typeof AuthAdminUsersCreateRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/transactions/create': {
      id: '/_auth/admin/transactions/create'
      path: '/transactions/create'
      fullPath: '/admin/transactions/create'
      preLoaderRoute: typeof AuthAdminTransactionsCreateRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/roles/create': {
      id: '/_auth/admin/roles/create'
      path: '/roles/create'
      fullPath: '/admin/roles/create'
      preLoaderRoute: typeof AuthAdminRolesCreateRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/materials/create': {
      id: '/_auth/admin/materials/create'
      path: '/materials/create'
      fullPath: '/admin/materials/create'
      preLoaderRoute: typeof AuthAdminMaterialsCreateRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/collections/create': {
      id: '/_auth/admin/collections/create'
      path: '/collections/create'
      fullPath: '/admin/collections/create'
      preLoaderRoute: typeof AuthAdminCollectionsCreateRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/businesses/create': {
      id: '/_auth/admin/businesses/create'
      path: '/businesses/create'
      fullPath: '/admin/businesses/create'
      preLoaderRoute: typeof AuthAdminBusinessesCreateRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/_mfa/mfa/verify': {
      id: '/_auth/_mfa/mfa/verify'
      path: '/mfa/verify'
      fullPath: '/mfa/verify'
      preLoaderRoute: typeof AuthMfaMfaVerifyRouteImport
      parentRoute: typeof AuthMfaRoute
    }
    '/_auth/_mfa/mfa/enable': {
      id: '/_auth/_mfa/mfa/enable'
      path: '/mfa/enable'
      fullPath: '/mfa/enable'
      preLoaderRoute: typeof AuthMfaMfaEnableRouteImport
      parentRoute: typeof AuthMfaRoute
    }
    '/_auth/business/users/$id/edit': {
      id: '/_auth/business/users/$id/edit'
      path: '/users/$id/edit'
      fullPath: '/business/users/$id/edit'
      preLoaderRoute: typeof AuthBusinessUsersIdEditRouteImport
      parentRoute: typeof AuthBusinessRoute
    }
    '/_auth/business/transactions/$id/edit': {
      id: '/_auth/business/transactions/$id/edit'
      path: '/transactions/$id/edit'
      fullPath: '/business/transactions/$id/edit'
      preLoaderRoute: typeof AuthBusinessTransactionsIdEditRouteImport
      parentRoute: typeof AuthBusinessRoute
    }
    '/_auth/admin/users/$id/edit': {
      id: '/_auth/admin/users/$id/edit'
      path: '/users/$id/edit'
      fullPath: '/admin/users/$id/edit'
      preLoaderRoute: typeof AuthAdminUsersIdEditRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/transactions/$id/edit': {
      id: '/_auth/admin/transactions/$id/edit'
      path: '/transactions/$id/edit'
      fullPath: '/admin/transactions/$id/edit'
      preLoaderRoute: typeof AuthAdminTransactionsIdEditRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/roles/$id/permissions': {
      id: '/_auth/admin/roles/$id/permissions'
      path: '/roles/$id/permissions'
      fullPath: '/admin/roles/$id/permissions'
      preLoaderRoute: typeof AuthAdminRolesIdPermissionsRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/roles/$id/edit': {
      id: '/_auth/admin/roles/$id/edit'
      path: '/roles/$id/edit'
      fullPath: '/admin/roles/$id/edit'
      preLoaderRoute: typeof AuthAdminRolesIdEditRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/materials/$id/edit': {
      id: '/_auth/admin/materials/$id/edit'
      path: '/materials/$id/edit'
      fullPath: '/admin/materials/$id/edit'
      preLoaderRoute: typeof AuthAdminMaterialsIdEditRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/collections/$id/edit': {
      id: '/_auth/admin/collections/$id/edit'
      path: '/collections/$id/edit'
      fullPath: '/admin/collections/$id/edit'
      preLoaderRoute: typeof AuthAdminCollectionsIdEditRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/businesses/$id/edit': {
      id: '/_auth/admin/businesses/$id/edit'
      path: '/businesses/$id/edit'
      fullPath: '/admin/businesses/$id/edit'
      preLoaderRoute: typeof AuthAdminBusinessesIdEditRouteImport
      parentRoute: typeof AuthAdminRoute
    }
  }
}

interface AuthMfaRouteChildren {
  AuthMfaMfaEnableRoute: typeof AuthMfaMfaEnableRoute
  AuthMfaMfaVerifyRoute: typeof AuthMfaMfaVerifyRoute
}

const AuthMfaRouteChildren: AuthMfaRouteChildren = {
  AuthMfaMfaEnableRoute: AuthMfaMfaEnableRoute,
  AuthMfaMfaVerifyRoute: AuthMfaMfaVerifyRoute,
}

const AuthMfaRouteWithChildren =
  AuthMfaRoute._addFileChildren(AuthMfaRouteChildren)

interface AuthAdminRouteChildren {
  AuthAdminIndexRoute: typeof AuthAdminIndexRoute
  AuthAdminBusinessesCreateRoute: typeof AuthAdminBusinessesCreateRoute
  AuthAdminCollectionsCreateRoute: typeof AuthAdminCollectionsCreateRoute
  AuthAdminMaterialsCreateRoute: typeof AuthAdminMaterialsCreateRoute
  AuthAdminRolesCreateRoute: typeof AuthAdminRolesCreateRoute
  AuthAdminTransactionsCreateRoute: typeof AuthAdminTransactionsCreateRoute
  AuthAdminUsersCreateRoute: typeof AuthAdminUsersCreateRoute
  AuthAdminBusinessesIndexRoute: typeof AuthAdminBusinessesIndexRoute
  AuthAdminCollectionsIndexRoute: typeof AuthAdminCollectionsIndexRoute
  AuthAdminMaterialsIndexRoute: typeof AuthAdminMaterialsIndexRoute
  AuthAdminRolesIndexRoute: typeof AuthAdminRolesIndexRoute
  AuthAdminTransactionsIndexRoute: typeof AuthAdminTransactionsIndexRoute
  AuthAdminUsersIndexRoute: typeof AuthAdminUsersIndexRoute
  AuthAdminBusinessesIdEditRoute: typeof AuthAdminBusinessesIdEditRoute
  AuthAdminCollectionsIdEditRoute: typeof AuthAdminCollectionsIdEditRoute
  AuthAdminMaterialsIdEditRoute: typeof AuthAdminMaterialsIdEditRoute
  AuthAdminRolesIdEditRoute: typeof AuthAdminRolesIdEditRoute
  AuthAdminRolesIdPermissionsRoute: typeof AuthAdminRolesIdPermissionsRoute
  AuthAdminTransactionsIdEditRoute: typeof AuthAdminTransactionsIdEditRoute
  AuthAdminUsersIdEditRoute: typeof AuthAdminUsersIdEditRoute
}

const AuthAdminRouteChildren: AuthAdminRouteChildren = {
  AuthAdminIndexRoute: AuthAdminIndexRoute,
  AuthAdminBusinessesCreateRoute: AuthAdminBusinessesCreateRoute,
  AuthAdminCollectionsCreateRoute: AuthAdminCollectionsCreateRoute,
  AuthAdminMaterialsCreateRoute: AuthAdminMaterialsCreateRoute,
  AuthAdminRolesCreateRoute: AuthAdminRolesCreateRoute,
  AuthAdminTransactionsCreateRoute: AuthAdminTransactionsCreateRoute,
  AuthAdminUsersCreateRoute: AuthAdminUsersCreateRoute,
  AuthAdminBusinessesIndexRoute: AuthAdminBusinessesIndexRoute,
  AuthAdminCollectionsIndexRoute: AuthAdminCollectionsIndexRoute,
  AuthAdminMaterialsIndexRoute: AuthAdminMaterialsIndexRoute,
  AuthAdminRolesIndexRoute: AuthAdminRolesIndexRoute,
  AuthAdminTransactionsIndexRoute: AuthAdminTransactionsIndexRoute,
  AuthAdminUsersIndexRoute: AuthAdminUsersIndexRoute,
  AuthAdminBusinessesIdEditRoute: AuthAdminBusinessesIdEditRoute,
  AuthAdminCollectionsIdEditRoute: AuthAdminCollectionsIdEditRoute,
  AuthAdminMaterialsIdEditRoute: AuthAdminMaterialsIdEditRoute,
  AuthAdminRolesIdEditRoute: AuthAdminRolesIdEditRoute,
  AuthAdminRolesIdPermissionsRoute: AuthAdminRolesIdPermissionsRoute,
  AuthAdminTransactionsIdEditRoute: AuthAdminTransactionsIdEditRoute,
  AuthAdminUsersIdEditRoute: AuthAdminUsersIdEditRoute,
}

const AuthAdminRouteWithChildren = AuthAdminRoute._addFileChildren(
  AuthAdminRouteChildren,
)

interface AuthBusinessRouteChildren {
  AuthBusinessIndexRoute: typeof AuthBusinessIndexRoute
  AuthBusinessTransactionsCreateRoute: typeof AuthBusinessTransactionsCreateRoute
  AuthBusinessUsersCreateRoute: typeof AuthBusinessUsersCreateRoute
  AuthBusinessCollectionsIndexRoute: typeof AuthBusinessCollectionsIndexRoute
  AuthBusinessTransactionsIndexRoute: typeof AuthBusinessTransactionsIndexRoute
  AuthBusinessUsersIndexRoute: typeof AuthBusinessUsersIndexRoute
  AuthBusinessTransactionsIdEditRoute: typeof AuthBusinessTransactionsIdEditRoute
  AuthBusinessUsersIdEditRoute: typeof AuthBusinessUsersIdEditRoute
}

const AuthBusinessRouteChildren: AuthBusinessRouteChildren = {
  AuthBusinessIndexRoute: AuthBusinessIndexRoute,
  AuthBusinessTransactionsCreateRoute: AuthBusinessTransactionsCreateRoute,
  AuthBusinessUsersCreateRoute: AuthBusinessUsersCreateRoute,
  AuthBusinessCollectionsIndexRoute: AuthBusinessCollectionsIndexRoute,
  AuthBusinessTransactionsIndexRoute: AuthBusinessTransactionsIndexRoute,
  AuthBusinessUsersIndexRoute: AuthBusinessUsersIndexRoute,
  AuthBusinessTransactionsIdEditRoute: AuthBusinessTransactionsIdEditRoute,
  AuthBusinessUsersIdEditRoute: AuthBusinessUsersIdEditRoute,
}

const AuthBusinessRouteWithChildren = AuthBusinessRoute._addFileChildren(
  AuthBusinessRouteChildren,
)

interface AuthCollectorRouteChildren {
  AuthCollectorIndexRoute: typeof AuthCollectorIndexRoute
}

const AuthCollectorRouteChildren: AuthCollectorRouteChildren = {
  AuthCollectorIndexRoute: AuthCollectorIndexRoute,
}

const AuthCollectorRouteWithChildren = AuthCollectorRoute._addFileChildren(
  AuthCollectorRouteChildren,
)

interface AuthRouteChildren {
  AuthMfaRoute: typeof AuthMfaRouteWithChildren
  AuthAdminRoute: typeof AuthAdminRouteWithChildren
  AuthBusinessRoute: typeof AuthBusinessRouteWithChildren
  AuthCollectorRoute: typeof AuthCollectorRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthMfaRoute: AuthMfaRouteWithChildren,
  AuthAdminRoute: AuthAdminRouteWithChildren,
  AuthBusinessRoute: AuthBusinessRouteWithChildren,
  AuthCollectorRoute: AuthCollectorRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface NoauthRouteChildren {
  NoauthSignInRoute: typeof NoauthSignInRoute
  NoauthSignUpRoute: typeof NoauthSignUpRoute
}

const NoauthRouteChildren: NoauthRouteChildren = {
  NoauthSignInRoute: NoauthSignInRoute,
  NoauthSignUpRoute: NoauthSignUpRoute,
}

const NoauthRouteWithChildren =
  NoauthRoute._addFileChildren(NoauthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  NoauthRoute: NoauthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
