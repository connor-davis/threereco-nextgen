// This file is auto-generated by @hey-api/openapi-ts

export type Address = {
  city: string;
  country: string;
  lineOne: string;
  lineTwo: string | null;
  province: string;
  zipCode: string;
} | null;

export type AssignBusiness = {
  id: string;
};

export type AssignBusinesses = Array<AssignBusiness>;

export type AssignCollectionMaterial = {
  carbonFactor: string;
  gwCode: string;
  name: string;
  value: number;
  weight: number;
};

export type AssignCollectionMaterials = Array<AssignCollectionMaterial>;

export type AssignMaterial = {
  id: string;
};

export type AssignMaterials = Array<AssignMaterial>;

export type AssignRole = {
  id: string;
};

export type AssignRoles = Array<AssignRole>;

export type AssignTransactionMaterial = {
  carbonFactor: string;
  gwCode: string;
  id?: string;
  name: string;
  value: number;
  weight: number;
};

export type AssignTransactionMaterials = Array<AssignTransactionMaterial>;

export type AssignUser = {
  id: string;
};

export type AssignUsers = Array<AssignUser>;

export type BankDetails = {
  accountHolder: string;
  accountNumber: string;
  bankName: string;
  branchCode: string;
} | null;

export type Business = {
  address: Address;
  bankDetails: BankDetails;
  createdAt: string;
  id: string;
  name: string;
  ownerId: string;
  roles: Roles;
  updatedAt: string;
  users: Array<User>;
};

export type Businesses = Array<Business>;

export type Collection = {
  buyer: Business;
  createdAt: string;
  id: string;
  materials: CollectionMaterials;
  seller: User;
  updatedAt: string;
};

export type CollectionMaterial = {
  carbonFactor?: string;
  createdAt: string;
  gwCode?: string;
  id: string;
  name?: string;
  updatedAt: string;
  value: number;
  weight: number;
};

export type CollectionMaterials = Array<CollectionMaterial>;

export type Collections = Array<Collection>;

export type CreateBusiness = {
  address: Address;
  bankDetails: BankDetails;
  name: string;
  ownerId: string;
};

export type CreateCollection = {
  buyerId: string;
  materials: AssignCollectionMaterials;
  sellerId: string;
};

export type CreateCollectionMaterial = {
  carbonFactor: string;
  gwCode: string;
  name: string;
  value: number;
  weight: number;
};

export type CreateMaterial = {
  carbonFactor: string;
  gwCode: string;
  name: string;
};

export type CreateRole = {
  description: string;
  name: string;
  permissions: Array<string>;
};

export type CreateTransaction = {
  buyerId: string;
  materials: AssignTransactionMaterials;
  sellerId: string;
};

export type CreateTransactionMaterial = {
  carbonFactor: string;
  gwCode: string;
  name: string;
  value: number;
  weight: number;
};

export type CreateUser = {
  address: Address;
  bankDetails: BankDetails;
  businessId?: string;
  businesses: AssignBusinesses;
  name: string;
  permissions: Array<string>;
  roles: AssignRoles;
  type: 'system' | 'collector' | 'business';
  username: string;
};

export type ErrorResponse = {
  error: string;
  message: string;
};

export type Material = {
  carbonFactor: string;
  createdAt: string;
  gwCode: string;
  id: string;
  name: string;
  updatedAt: string;
};

export type Materials = Array<Material>;

export type Pagination = {
  count: number;
  currentPage: number;
  nextPage: number;
  pageSize: number;
  pages: number;
  previousPage: number;
};

export type Permission = {
  description: string;
  label: string;
  value: string;
};

export type PermissionGroup = {
  name: string;
  permissions: Permissions;
  subGroups: Array<PermissionGroup>;
};

export type PermissionGroups = Array<PermissionGroup>;

export type Permissions = Array<Permission>;

export type Query = {
  page: number;
  pageSize: number;
  searchTerm: string;
};

export type Role = {
  createdAt: string;
  default: boolean;
  description: string;
  id: string;
  name: string;
  permissions: Array<string>;
  updatedAt: string;
};

export type Roles = Array<Role>;

export type SuccessResponse = {
  item?:
    | {
        address: Address;
        bankDetails: BankDetails;
        businessId: string | null;
        businesses: Array<Business>;
        createdAt: string;
        id: string;
        mfaEnabled: boolean;
        mfaVerified: boolean;
        name: string;
        permissions: Array<string>;
        roles: Roles;
        type: 'system' | 'collector' | 'business';
        updatedAt: string;
        username: string;
      }
    | {
        createdAt: string;
        default: boolean;
        description: string;
        id: string;
        name: string;
        permissions: Array<string>;
        updatedAt: string;
      }
    | {
        carbonFactor: string;
        createdAt: string;
        gwCode: string;
        id: string;
        name: string;
        updatedAt: string;
      }
    | {
        buyer: Business;
        createdAt: string;
        id: string;
        materials: CollectionMaterials;
        seller: User;
        updatedAt: string;
      }
    | {
        carbonFactor?: string;
        createdAt: string;
        gwCode?: string;
        id: string;
        name?: string;
        updatedAt: string;
        value: number;
        weight: number;
      }
    | {
        buyer: Business;
        createdAt: string;
        id: string;
        materials: TransactionMaterials;
        seller: User;
        updatedAt: string;
      }
    | {
        carbonFactor?: string;
        createdAt: string;
        gwCode?: string;
        id: string;
        name?: string;
        updatedAt: string;
        value: number;
        weight: number;
      }
    | {
        address: Address;
        bankDetails: BankDetails;
        createdAt: string;
        id: string;
        name: string;
        ownerId: string;
        roles: Roles;
        updatedAt: string;
        users: Array<User>;
      };
  items?: Array<
    | {
        address: Address;
        bankDetails: BankDetails;
        businessId: string | null;
        businesses: Array<Business>;
        createdAt: string;
        id: string;
        mfaEnabled: boolean;
        mfaVerified: boolean;
        name: string;
        permissions: Array<string>;
        roles: Roles;
        type: 'system' | 'collector' | 'business';
        updatedAt: string;
        username: string;
      }
    | {
        createdAt: string;
        default: boolean;
        description: string;
        id: string;
        name: string;
        permissions: Array<string>;
        updatedAt: string;
      }
    | {
        carbonFactor: string;
        createdAt: string;
        gwCode: string;
        id: string;
        name: string;
        updatedAt: string;
      }
    | {
        buyer: Business;
        createdAt: string;
        id: string;
        materials: CollectionMaterials;
        seller: User;
        updatedAt: string;
      }
    | {
        carbonFactor?: string;
        createdAt: string;
        gwCode?: string;
        id: string;
        name?: string;
        updatedAt: string;
        value: number;
        weight: number;
      }
    | {
        buyer: Business;
        createdAt: string;
        id: string;
        materials: TransactionMaterials;
        seller: User;
        updatedAt: string;
      }
    | {
        carbonFactor?: string;
        createdAt: string;
        gwCode?: string;
        id: string;
        name?: string;
        updatedAt: string;
        value: number;
        weight: number;
      }
    | {
        address: Address;
        bankDetails: BankDetails;
        createdAt: string;
        id: string;
        name: string;
        ownerId: string;
        roles: Roles;
        updatedAt: string;
        users: Array<User>;
      }
    | {
        name: string;
        permissions: Permissions;
        subGroups: Array<PermissionGroup>;
      }
  >;
  pagination?: Pagination;
};

export type Transaction = {
  buyer: Business;
  createdAt: string;
  id: string;
  materials: TransactionMaterials;
  seller: User;
  updatedAt: string;
};

export type TransactionMaterial = {
  carbonFactor?: string;
  createdAt: string;
  gwCode?: string;
  id: string;
  name?: string;
  updatedAt: string;
  value: number;
  weight: number;
};

export type TransactionMaterials = Array<TransactionMaterial>;

export type Transactions = Array<Transaction>;

export type UpdateBusiness = {
  address: Address;
  bankDetails: BankDetails;
  name: string;
  ownerId: string;
};

export type UpdateCollection = {
  buyerId: string | null;
  sellerId: string | null;
};

export type UpdateCollectionMaterial = {
  carbonFactor: string;
  gwCode: string;
  name: string;
  value: number | null;
  weight: number | null;
};

export type UpdateMaterial = {
  carbonFactor: string | null;
  gwCode: string | null;
  name: string | null;
};

export type UpdateRole = {
  description: string | null;
  name: string | null;
  permissions: Array<string> | null;
};

export type UpdateTransaction = {
  buyerId: string | null;
  sellerId: string | null;
};

export type UpdateTransactionMaterial = {
  carbonFactor: string;
  gwCode: string;
  name: string;
  value: number | null;
  weight: number | null;
};

export type UpdateUser = {
  address: Address;
  bankDetails: BankDetails;
  businessId?: string | null;
  businesses: AssignBusinesses;
  name: string | null;
  permissions: Array<string> | null;
  roles: AssignRoles;
  type: 'system' | 'collector' | 'business';
  username: string | null;
};

export type User = {
  address: Address;
  bankDetails: BankDetails;
  businessId: string | null;
  businesses: Array<Business>;
  createdAt: string;
  id: string;
  mfaEnabled: boolean;
  mfaVerified: boolean;
  name: string;
  permissions: Array<string>;
  roles: Roles;
  type: 'system' | 'collector' | 'business';
  updatedAt: string;
  username: string;
};

export type Users = Array<User>;

/**
 * Login payload
 */
export type LoginPayload = {
  password: string;
  username: string;
};

/**
 * Register payload
 */
export type RegisterPayload = {
  name: string;
  password: string;
  type: 'business' | 'collector';
  username: string;
};

/**
 * Verify MFA payload
 */
export type VerifyMfaPayload = {
  code: string;
};

export type GetApiAuthenticationCheckData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/authentication/check';
};

export type GetApiAuthenticationCheckErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiAuthenticationCheckError =
  GetApiAuthenticationCheckErrors[keyof GetApiAuthenticationCheckErrors];

export type GetApiAuthenticationCheckResponses = {
  /**
   * Successful authentication check.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiAuthenticationCheckResponse =
  GetApiAuthenticationCheckResponses[keyof GetApiAuthenticationCheckResponses];

export type PostApiAuthenticationLoginData = {
  /**
   * Login payload
   */
  body: LoginPayload;
  path?: never;
  query?: never;
  url: '/api/authentication/login';
};

export type PostApiAuthenticationLoginErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiAuthenticationLoginError =
  PostApiAuthenticationLoginErrors[keyof PostApiAuthenticationLoginErrors];

export type PostApiAuthenticationLoginResponses = {
  /**
   * Logged in successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiAuthenticationLoginResponse =
  PostApiAuthenticationLoginResponses[keyof PostApiAuthenticationLoginResponses];

export type PostApiAuthenticationLogoutData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/authentication/logout';
};

export type PostApiAuthenticationLogoutErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiAuthenticationLogoutError =
  PostApiAuthenticationLogoutErrors[keyof PostApiAuthenticationLogoutErrors];

export type PostApiAuthenticationLogoutResponses = {
  /**
   * Successful logout.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiAuthenticationLogoutResponse =
  PostApiAuthenticationLogoutResponses[keyof PostApiAuthenticationLogoutResponses];

export type GetApiAuthenticationMfaEnableData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/authentication/mfa/enable';
};

export type GetApiAuthenticationMfaEnableErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiAuthenticationMfaEnableError =
  GetApiAuthenticationMfaEnableErrors[keyof GetApiAuthenticationMfaEnableErrors];

export type GetApiAuthenticationMfaEnableResponses = {
  /**
   * The MFA QR code has been successfully generated and returned.
   */
  200: unknown;
};

export type PostApiAuthenticationMfaVerifyData = {
  /**
   * Verify MFA payload
   */
  body: VerifyMfaPayload;
  path?: never;
  query?: never;
  url: '/api/authentication/mfa/verify';
};

export type PostApiAuthenticationMfaVerifyErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiAuthenticationMfaVerifyError =
  PostApiAuthenticationMfaVerifyErrors[keyof PostApiAuthenticationMfaVerifyErrors];

export type PostApiAuthenticationMfaVerifyResponses = {
  /**
   * Successful authentication check.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiAuthenticationMfaVerifyResponse =
  PostApiAuthenticationMfaVerifyResponses[keyof PostApiAuthenticationMfaVerifyResponses];

export type GetApiAuthenticationPermissionsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/authentication/permissions';
};

export type GetApiAuthenticationPermissionsErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiAuthenticationPermissionsError =
  GetApiAuthenticationPermissionsErrors[keyof GetApiAuthenticationPermissionsErrors];

export type GetApiAuthenticationPermissionsResponses = {
  /**
   * Permissions retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiAuthenticationPermissionsResponse =
  GetApiAuthenticationPermissionsResponses[keyof GetApiAuthenticationPermissionsResponses];

export type PostApiAuthenticationRegisterData = {
  /**
   * Register payload
   */
  body: RegisterPayload;
  path?: never;
  query?: never;
  url: '/api/authentication/register';
};

export type PostApiAuthenticationRegisterErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiAuthenticationRegisterError =
  PostApiAuthenticationRegisterErrors[keyof PostApiAuthenticationRegisterErrors];

export type PostApiAuthenticationRegisterResponses = {
  /**
   * Registered successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiAuthenticationRegisterResponse =
  PostApiAuthenticationRegisterResponses[keyof PostApiAuthenticationRegisterResponses];

export type GetApiBusinessesData = {
  body?: never;
  path?: never;
  query: {
    page: number;
    pageSize: number;
    preload?: Array<string>;
    searchTerm?: string;
    searchColumn?: Array<string>;
  };
  url: '/api/businesses';
};

export type GetApiBusinessesErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiBusinessesError =
  GetApiBusinessesErrors[keyof GetApiBusinessesErrors];

export type GetApiBusinessesResponses = {
  /**
   * Business's retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiBusinessesResponse =
  GetApiBusinessesResponses[keyof GetApiBusinessesResponses];

export type PostApiBusinessesData = {
  /**
   * Payload to create a new business.
   */
  body: CreateBusiness;
  path?: never;
  query?: never;
  url: '/api/businesses';
};

export type PostApiBusinessesErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiBusinessesError =
  PostApiBusinessesErrors[keyof PostApiBusinessesErrors];

export type PostApiBusinessesResponses = {
  /**
   * Business created successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiBusinessesResponse =
  PostApiBusinessesResponses[keyof PostApiBusinessesResponses];

export type PostApiBusinessesAssignUserByBusinessIdByUserIdData = {
  body?: never;
  path: {
    businessId: string;
    userId: string;
  };
  query?: never;
  url: '/api/businesses/assign-user/{businessId}/{userId}';
};

export type PostApiBusinessesAssignUserByBusinessIdByUserIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiBusinessesAssignUserByBusinessIdByUserIdError =
  PostApiBusinessesAssignUserByBusinessIdByUserIdErrors[keyof PostApiBusinessesAssignUserByBusinessIdByUserIdErrors];

export type PostApiBusinessesAssignUserByBusinessIdByUserIdResponses = {
  /**
   * User assigned to Business successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiBusinessesAssignUserByBusinessIdByUserIdResponse =
  PostApiBusinessesAssignUserByBusinessIdByUserIdResponses[keyof PostApiBusinessesAssignUserByBusinessIdByUserIdResponses];

export type GetApiBusinessesListUsersByBusinessIdData = {
  body?: never;
  path: {
    businessId: string;
  };
  query: {
    page: number;
    pageSize: number;
    preload?: Array<string>;
    searchTerm?: string;
    searchColumn?: Array<string>;
  };
  url: '/api/businesses/list-users/{businessId}';
};

export type GetApiBusinessesListUsersByBusinessIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiBusinessesListUsersByBusinessIdError =
  GetApiBusinessesListUsersByBusinessIdErrors[keyof GetApiBusinessesListUsersByBusinessIdErrors];

export type GetApiBusinessesListUsersByBusinessIdResponses = {
  /**
   * User retrieved from Business successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiBusinessesListUsersByBusinessIdResponse =
  GetApiBusinessesListUsersByBusinessIdResponses[keyof GetApiBusinessesListUsersByBusinessIdResponses];

export type PostApiBusinessesUnassignUserByBusinessIdByUserIdData = {
  body?: never;
  path: {
    businessId: string;
    userId: string;
  };
  query?: never;
  url: '/api/businesses/unassign-user/{businessId}/{userId}';
};

export type PostApiBusinessesUnassignUserByBusinessIdByUserIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiBusinessesUnassignUserByBusinessIdByUserIdError =
  PostApiBusinessesUnassignUserByBusinessIdByUserIdErrors[keyof PostApiBusinessesUnassignUserByBusinessIdByUserIdErrors];

export type PostApiBusinessesUnassignUserByBusinessIdByUserIdResponses = {
  /**
   * User unassigned from Business successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiBusinessesUnassignUserByBusinessIdByUserIdResponse =
  PostApiBusinessesUnassignUserByBusinessIdByUserIdResponses[keyof PostApiBusinessesUnassignUserByBusinessIdByUserIdResponses];

export type DeleteApiBusinessesByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/businesses/{id}';
};

export type DeleteApiBusinessesByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type DeleteApiBusinessesByIdError =
  DeleteApiBusinessesByIdErrors[keyof DeleteApiBusinessesByIdErrors];

export type DeleteApiBusinessesByIdResponses = {
  /**
   * Business deleted successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type DeleteApiBusinessesByIdResponse =
  DeleteApiBusinessesByIdResponses[keyof DeleteApiBusinessesByIdResponses];

export type GetApiBusinessesByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    preload?: Array<string>;
  };
  url: '/api/businesses/{id}';
};

export type GetApiBusinessesByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiBusinessesByIdError =
  GetApiBusinessesByIdErrors[keyof GetApiBusinessesByIdErrors];

export type GetApiBusinessesByIdResponses = {
  /**
   * Business retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiBusinessesByIdResponse =
  GetApiBusinessesByIdResponses[keyof GetApiBusinessesByIdResponses];

export type PutApiBusinessesByIdData = {
  /**
   * Payload to update an existing business.
   */
  body: UpdateBusiness;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/businesses/{id}';
};

export type PutApiBusinessesByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PutApiBusinessesByIdError =
  PutApiBusinessesByIdErrors[keyof PutApiBusinessesByIdErrors];

export type PutApiBusinessesByIdResponses = {
  /**
   * Business updated successfully
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PutApiBusinessesByIdResponse =
  PutApiBusinessesByIdResponses[keyof PutApiBusinessesByIdResponses];

export type GetApiCollectionsData = {
  body?: never;
  path?: never;
  query: {
    page: number;
    pageSize: number;
    preload?: Array<string>;
    searchTerm?: string;
    searchColumn?: Array<string>;
  };
  url: '/api/collections';
};

export type GetApiCollectionsErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiCollectionsError =
  GetApiCollectionsErrors[keyof GetApiCollectionsErrors];

export type GetApiCollectionsResponses = {
  /**
   * Collection's retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiCollectionsResponse =
  GetApiCollectionsResponses[keyof GetApiCollectionsResponses];

export type PostApiCollectionsData = {
  /**
   * Payload to create a new collection.
   */
  body: CreateCollection;
  path?: never;
  query?: never;
  url: '/api/collections';
};

export type PostApiCollectionsErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiCollectionsError =
  PostApiCollectionsErrors[keyof PostApiCollectionsErrors];

export type PostApiCollectionsResponses = {
  /**
   * Collection created successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiCollectionsResponse =
  PostApiCollectionsResponses[keyof PostApiCollectionsResponses];

export type PostApiCollectionsAssignMaterialByCollectionIdByMaterialIdData = {
  body?: never;
  path: {
    collectionId: string;
    materialId: string;
  };
  query?: never;
  url: '/api/collections/assign-material/{collectionId}/{materialId}';
};

export type PostApiCollectionsAssignMaterialByCollectionIdByMaterialIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiCollectionsAssignMaterialByCollectionIdByMaterialIdError =
  PostApiCollectionsAssignMaterialByCollectionIdByMaterialIdErrors[keyof PostApiCollectionsAssignMaterialByCollectionIdByMaterialIdErrors];

export type PostApiCollectionsAssignMaterialByCollectionIdByMaterialIdResponses =
  {
    /**
     * Material assigned to Collection successfully.
     */
    200: {
      item?:
        | {
            address: Address;
            bankDetails: BankDetails;
            businessId: string | null;
            businesses: Array<Business>;
            createdAt: string;
            id: string;
            mfaEnabled: boolean;
            mfaVerified: boolean;
            name: string;
            permissions: Array<string>;
            roles: Roles;
            type: 'system' | 'collector' | 'business';
            updatedAt: string;
            username: string;
          }
        | {
            createdAt: string;
            default: boolean;
            description: string;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }
        | {
            carbonFactor: string;
            createdAt: string;
            gwCode: string;
            id: string;
            name: string;
            updatedAt: string;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: CollectionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: TransactionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            address: Address;
            bankDetails: BankDetails;
            createdAt: string;
            id: string;
            name: string;
            ownerId: string;
            roles: Roles;
            updatedAt: string;
            users: Array<User>;
          };
      items?: Array<
        | {
            address: Address;
            bankDetails: BankDetails;
            businessId: string | null;
            businesses: Array<Business>;
            createdAt: string;
            id: string;
            mfaEnabled: boolean;
            mfaVerified: boolean;
            name: string;
            permissions: Array<string>;
            roles: Roles;
            type: 'system' | 'collector' | 'business';
            updatedAt: string;
            username: string;
          }
        | {
            createdAt: string;
            default: boolean;
            description: string;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }
        | {
            carbonFactor: string;
            createdAt: string;
            gwCode: string;
            id: string;
            name: string;
            updatedAt: string;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: CollectionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: TransactionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            address: Address;
            bankDetails: BankDetails;
            createdAt: string;
            id: string;
            name: string;
            ownerId: string;
            roles: Roles;
            updatedAt: string;
            users: Array<User>;
          }
        | {
            name: string;
            permissions: Permissions;
            subGroups: Array<PermissionGroup>;
          }
      >;
      pagination?: Pagination;
    };
  };

export type PostApiCollectionsAssignMaterialByCollectionIdByMaterialIdResponse =
  PostApiCollectionsAssignMaterialByCollectionIdByMaterialIdResponses[keyof PostApiCollectionsAssignMaterialByCollectionIdByMaterialIdResponses];

export type GetApiCollectionsListMaterialsByCollectionIdData = {
  body?: never;
  path: {
    collectionId: string;
  };
  query: {
    page: number;
    pageSize: number;
    preload?: Array<string>;
    searchTerm?: string;
    searchColumn?: Array<string>;
  };
  url: '/api/collections/list-materials/{collectionId}';
};

export type GetApiCollectionsListMaterialsByCollectionIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiCollectionsListMaterialsByCollectionIdError =
  GetApiCollectionsListMaterialsByCollectionIdErrors[keyof GetApiCollectionsListMaterialsByCollectionIdErrors];

export type GetApiCollectionsListMaterialsByCollectionIdResponses = {
  /**
   * Material retrieved from Collection successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiCollectionsListMaterialsByCollectionIdResponse =
  GetApiCollectionsListMaterialsByCollectionIdResponses[keyof GetApiCollectionsListMaterialsByCollectionIdResponses];

export type GetApiCollectionsMaterialsData = {
  body?: never;
  path?: never;
  query: {
    page: number;
    pageSize: number;
    preload?: Array<string>;
    searchTerm?: string;
    searchColumn?: Array<string>;
  };
  url: '/api/collections/materials';
};

export type GetApiCollectionsMaterialsErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiCollectionsMaterialsError =
  GetApiCollectionsMaterialsErrors[keyof GetApiCollectionsMaterialsErrors];

export type GetApiCollectionsMaterialsResponses = {
  /**
   * Collection Material's retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiCollectionsMaterialsResponse =
  GetApiCollectionsMaterialsResponses[keyof GetApiCollectionsMaterialsResponses];

export type PostApiCollectionsMaterialsData = {
  /**
   * Payload to create a new collection material.
   */
  body: CreateCollectionMaterial;
  path?: never;
  query?: never;
  url: '/api/collections/materials';
};

export type PostApiCollectionsMaterialsErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiCollectionsMaterialsError =
  PostApiCollectionsMaterialsErrors[keyof PostApiCollectionsMaterialsErrors];

export type PostApiCollectionsMaterialsResponses = {
  /**
   * Collection Material created successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiCollectionsMaterialsResponse =
  PostApiCollectionsMaterialsResponses[keyof PostApiCollectionsMaterialsResponses];

export type DeleteApiCollectionsMaterialsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/collections/materials/{id}';
};

export type DeleteApiCollectionsMaterialsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type DeleteApiCollectionsMaterialsByIdError =
  DeleteApiCollectionsMaterialsByIdErrors[keyof DeleteApiCollectionsMaterialsByIdErrors];

export type DeleteApiCollectionsMaterialsByIdResponses = {
  /**
   * Collection Material deleted successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type DeleteApiCollectionsMaterialsByIdResponse =
  DeleteApiCollectionsMaterialsByIdResponses[keyof DeleteApiCollectionsMaterialsByIdResponses];

export type GetApiCollectionsMaterialsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    preload?: Array<string>;
  };
  url: '/api/collections/materials/{id}';
};

export type GetApiCollectionsMaterialsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiCollectionsMaterialsByIdError =
  GetApiCollectionsMaterialsByIdErrors[keyof GetApiCollectionsMaterialsByIdErrors];

export type GetApiCollectionsMaterialsByIdResponses = {
  /**
   * Collection Material retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiCollectionsMaterialsByIdResponse =
  GetApiCollectionsMaterialsByIdResponses[keyof GetApiCollectionsMaterialsByIdResponses];

export type PutApiCollectionsMaterialsByIdData = {
  /**
   * Payload to update an existing collection material.
   */
  body: UpdateCollectionMaterial;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/collections/materials/{id}';
};

export type PutApiCollectionsMaterialsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PutApiCollectionsMaterialsByIdError =
  PutApiCollectionsMaterialsByIdErrors[keyof PutApiCollectionsMaterialsByIdErrors];

export type PutApiCollectionsMaterialsByIdResponses = {
  /**
   * Collection Material updated successfully
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PutApiCollectionsMaterialsByIdResponse =
  PutApiCollectionsMaterialsByIdResponses[keyof PutApiCollectionsMaterialsByIdResponses];

export type PostApiCollectionsUnassignMaterialByCollectionIdByMaterialIdData = {
  body?: never;
  path: {
    collectionId: string;
    materialId: string;
  };
  query?: never;
  url: '/api/collections/unassign-material/{collectionId}/{materialId}';
};

export type PostApiCollectionsUnassignMaterialByCollectionIdByMaterialIdErrors =
  {
    /**
     * Bad Request
     */
    400: {
      error: string;
      message: string;
    };
    /**
     * Unauthorized
     */
    401: {
      error: string;
      message: string;
    };
    /**
     * Forbidden
     */
    403: {
      error: string;
      message: string;
    };
    /**
     * Not Found
     */
    404: {
      error: string;
      message: string;
    };
    /**
     * Internal Server Error
     */
    500: {
      error: string;
      message: string;
    };
    default: unknown;
  };

export type PostApiCollectionsUnassignMaterialByCollectionIdByMaterialIdError =
  PostApiCollectionsUnassignMaterialByCollectionIdByMaterialIdErrors[keyof PostApiCollectionsUnassignMaterialByCollectionIdByMaterialIdErrors];

export type PostApiCollectionsUnassignMaterialByCollectionIdByMaterialIdResponses =
  {
    /**
     * Material unassigned from Collection successfully.
     */
    200: {
      item?:
        | {
            address: Address;
            bankDetails: BankDetails;
            businessId: string | null;
            businesses: Array<Business>;
            createdAt: string;
            id: string;
            mfaEnabled: boolean;
            mfaVerified: boolean;
            name: string;
            permissions: Array<string>;
            roles: Roles;
            type: 'system' | 'collector' | 'business';
            updatedAt: string;
            username: string;
          }
        | {
            createdAt: string;
            default: boolean;
            description: string;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }
        | {
            carbonFactor: string;
            createdAt: string;
            gwCode: string;
            id: string;
            name: string;
            updatedAt: string;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: CollectionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: TransactionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            address: Address;
            bankDetails: BankDetails;
            createdAt: string;
            id: string;
            name: string;
            ownerId: string;
            roles: Roles;
            updatedAt: string;
            users: Array<User>;
          };
      items?: Array<
        | {
            address: Address;
            bankDetails: BankDetails;
            businessId: string | null;
            businesses: Array<Business>;
            createdAt: string;
            id: string;
            mfaEnabled: boolean;
            mfaVerified: boolean;
            name: string;
            permissions: Array<string>;
            roles: Roles;
            type: 'system' | 'collector' | 'business';
            updatedAt: string;
            username: string;
          }
        | {
            createdAt: string;
            default: boolean;
            description: string;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }
        | {
            carbonFactor: string;
            createdAt: string;
            gwCode: string;
            id: string;
            name: string;
            updatedAt: string;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: CollectionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: TransactionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            address: Address;
            bankDetails: BankDetails;
            createdAt: string;
            id: string;
            name: string;
            ownerId: string;
            roles: Roles;
            updatedAt: string;
            users: Array<User>;
          }
        | {
            name: string;
            permissions: Permissions;
            subGroups: Array<PermissionGroup>;
          }
      >;
      pagination?: Pagination;
    };
  };

export type PostApiCollectionsUnassignMaterialByCollectionIdByMaterialIdResponse =
  PostApiCollectionsUnassignMaterialByCollectionIdByMaterialIdResponses[keyof PostApiCollectionsUnassignMaterialByCollectionIdByMaterialIdResponses];

export type DeleteApiCollectionsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/collections/{id}';
};

export type DeleteApiCollectionsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type DeleteApiCollectionsByIdError =
  DeleteApiCollectionsByIdErrors[keyof DeleteApiCollectionsByIdErrors];

export type DeleteApiCollectionsByIdResponses = {
  /**
   * Collection deleted successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type DeleteApiCollectionsByIdResponse =
  DeleteApiCollectionsByIdResponses[keyof DeleteApiCollectionsByIdResponses];

export type GetApiCollectionsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    preload?: Array<string>;
  };
  url: '/api/collections/{id}';
};

export type GetApiCollectionsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiCollectionsByIdError =
  GetApiCollectionsByIdErrors[keyof GetApiCollectionsByIdErrors];

export type GetApiCollectionsByIdResponses = {
  /**
   * Collection retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiCollectionsByIdResponse =
  GetApiCollectionsByIdResponses[keyof GetApiCollectionsByIdResponses];

export type PutApiCollectionsByIdData = {
  /**
   * Payload to update an existing collection.
   */
  body: UpdateCollection;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/collections/{id}';
};

export type PutApiCollectionsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PutApiCollectionsByIdError =
  PutApiCollectionsByIdErrors[keyof PutApiCollectionsByIdErrors];

export type PutApiCollectionsByIdResponses = {
  /**
   * Collection updated successfully
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PutApiCollectionsByIdResponse =
  PutApiCollectionsByIdResponses[keyof PutApiCollectionsByIdResponses];

export type GetApiMaterialsData = {
  body?: never;
  path?: never;
  query: {
    page: number;
    pageSize: number;
    preload?: Array<string>;
    searchTerm?: string;
    searchColumn?: Array<string>;
  };
  url: '/api/materials';
};

export type GetApiMaterialsErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiMaterialsError =
  GetApiMaterialsErrors[keyof GetApiMaterialsErrors];

export type GetApiMaterialsResponses = {
  /**
   * Material's retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiMaterialsResponse =
  GetApiMaterialsResponses[keyof GetApiMaterialsResponses];

export type PostApiMaterialsData = {
  /**
   * Payload to create a new material.
   */
  body: CreateMaterial;
  path?: never;
  query?: never;
  url: '/api/materials';
};

export type PostApiMaterialsErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiMaterialsError =
  PostApiMaterialsErrors[keyof PostApiMaterialsErrors];

export type PostApiMaterialsResponses = {
  /**
   * Material created successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiMaterialsResponse =
  PostApiMaterialsResponses[keyof PostApiMaterialsResponses];

export type DeleteApiMaterialsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/materials/{id}';
};

export type DeleteApiMaterialsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type DeleteApiMaterialsByIdError =
  DeleteApiMaterialsByIdErrors[keyof DeleteApiMaterialsByIdErrors];

export type DeleteApiMaterialsByIdResponses = {
  /**
   * Material deleted successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type DeleteApiMaterialsByIdResponse =
  DeleteApiMaterialsByIdResponses[keyof DeleteApiMaterialsByIdResponses];

export type GetApiMaterialsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    preload?: Array<string>;
  };
  url: '/api/materials/{id}';
};

export type GetApiMaterialsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiMaterialsByIdError =
  GetApiMaterialsByIdErrors[keyof GetApiMaterialsByIdErrors];

export type GetApiMaterialsByIdResponses = {
  /**
   * Material retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiMaterialsByIdResponse =
  GetApiMaterialsByIdResponses[keyof GetApiMaterialsByIdResponses];

export type PutApiMaterialsByIdData = {
  /**
   * Payload to update an existing material.
   */
  body: UpdateMaterial;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/materials/{id}';
};

export type PutApiMaterialsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PutApiMaterialsByIdError =
  PutApiMaterialsByIdErrors[keyof PutApiMaterialsByIdErrors];

export type PutApiMaterialsByIdResponses = {
  /**
   * Material updated successfully
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PutApiMaterialsByIdResponse =
  PutApiMaterialsByIdResponses[keyof PutApiMaterialsByIdResponses];

export type GetApiRolesData = {
  body?: never;
  path?: never;
  query: {
    page: number;
    pageSize: number;
    preload?: Array<string>;
    searchTerm?: string;
    searchColumn?: Array<string>;
  };
  url: '/api/roles';
};

export type GetApiRolesErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiRolesError = GetApiRolesErrors[keyof GetApiRolesErrors];

export type GetApiRolesResponses = {
  /**
   * Role's retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiRolesResponse =
  GetApiRolesResponses[keyof GetApiRolesResponses];

export type PostApiRolesData = {
  /**
   * Payload to create a new role.
   */
  body: CreateRole;
  path?: never;
  query?: never;
  url: '/api/roles';
};

export type PostApiRolesErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiRolesError = PostApiRolesErrors[keyof PostApiRolesErrors];

export type PostApiRolesResponses = {
  /**
   * Role created successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiRolesResponse =
  PostApiRolesResponses[keyof PostApiRolesResponses];

export type DeleteApiRolesByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/roles/{id}';
};

export type DeleteApiRolesByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type DeleteApiRolesByIdError =
  DeleteApiRolesByIdErrors[keyof DeleteApiRolesByIdErrors];

export type DeleteApiRolesByIdResponses = {
  /**
   * Role deleted successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type DeleteApiRolesByIdResponse =
  DeleteApiRolesByIdResponses[keyof DeleteApiRolesByIdResponses];

export type GetApiRolesByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    preload?: Array<string>;
  };
  url: '/api/roles/{id}';
};

export type GetApiRolesByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiRolesByIdError =
  GetApiRolesByIdErrors[keyof GetApiRolesByIdErrors];

export type GetApiRolesByIdResponses = {
  /**
   * Role retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiRolesByIdResponse =
  GetApiRolesByIdResponses[keyof GetApiRolesByIdResponses];

export type PutApiRolesByIdData = {
  /**
   * Payload to update an existing role.
   */
  body: UpdateRole;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/roles/{id}';
};

export type PutApiRolesByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PutApiRolesByIdError =
  PutApiRolesByIdErrors[keyof PutApiRolesByIdErrors];

export type PutApiRolesByIdResponses = {
  /**
   * Role updated successfully
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PutApiRolesByIdResponse =
  PutApiRolesByIdResponses[keyof PutApiRolesByIdResponses];

export type GetApiTransactionsData = {
  body?: never;
  path?: never;
  query: {
    page: number;
    pageSize: number;
    preload?: Array<string>;
    searchTerm?: string;
    searchColumn?: Array<string>;
  };
  url: '/api/transactions';
};

export type GetApiTransactionsErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiTransactionsError =
  GetApiTransactionsErrors[keyof GetApiTransactionsErrors];

export type GetApiTransactionsResponses = {
  /**
   * Transaction's retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiTransactionsResponse =
  GetApiTransactionsResponses[keyof GetApiTransactionsResponses];

export type PostApiTransactionsData = {
  /**
   * Payload to create a new transaction.
   */
  body: CreateTransaction;
  path?: never;
  query?: never;
  url: '/api/transactions';
};

export type PostApiTransactionsErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiTransactionsError =
  PostApiTransactionsErrors[keyof PostApiTransactionsErrors];

export type PostApiTransactionsResponses = {
  /**
   * Transaction created successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiTransactionsResponse =
  PostApiTransactionsResponses[keyof PostApiTransactionsResponses];

export type PostApiTransactionsAssignMaterialByTransactionIdByMaterialIdData = {
  body?: never;
  path: {
    transactionId: string;
    materialId: string;
  };
  query?: never;
  url: '/api/transactions/assign-material/{transactionId}/{materialId}';
};

export type PostApiTransactionsAssignMaterialByTransactionIdByMaterialIdErrors =
  {
    /**
     * Bad Request
     */
    400: {
      error: string;
      message: string;
    };
    /**
     * Unauthorized
     */
    401: {
      error: string;
      message: string;
    };
    /**
     * Forbidden
     */
    403: {
      error: string;
      message: string;
    };
    /**
     * Not Found
     */
    404: {
      error: string;
      message: string;
    };
    /**
     * Internal Server Error
     */
    500: {
      error: string;
      message: string;
    };
    default: unknown;
  };

export type PostApiTransactionsAssignMaterialByTransactionIdByMaterialIdError =
  PostApiTransactionsAssignMaterialByTransactionIdByMaterialIdErrors[keyof PostApiTransactionsAssignMaterialByTransactionIdByMaterialIdErrors];

export type PostApiTransactionsAssignMaterialByTransactionIdByMaterialIdResponses =
  {
    /**
     * Material assigned to Transaction successfully.
     */
    200: {
      item?:
        | {
            address: Address;
            bankDetails: BankDetails;
            businessId: string | null;
            businesses: Array<Business>;
            createdAt: string;
            id: string;
            mfaEnabled: boolean;
            mfaVerified: boolean;
            name: string;
            permissions: Array<string>;
            roles: Roles;
            type: 'system' | 'collector' | 'business';
            updatedAt: string;
            username: string;
          }
        | {
            createdAt: string;
            default: boolean;
            description: string;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }
        | {
            carbonFactor: string;
            createdAt: string;
            gwCode: string;
            id: string;
            name: string;
            updatedAt: string;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: CollectionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: TransactionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            address: Address;
            bankDetails: BankDetails;
            createdAt: string;
            id: string;
            name: string;
            ownerId: string;
            roles: Roles;
            updatedAt: string;
            users: Array<User>;
          };
      items?: Array<
        | {
            address: Address;
            bankDetails: BankDetails;
            businessId: string | null;
            businesses: Array<Business>;
            createdAt: string;
            id: string;
            mfaEnabled: boolean;
            mfaVerified: boolean;
            name: string;
            permissions: Array<string>;
            roles: Roles;
            type: 'system' | 'collector' | 'business';
            updatedAt: string;
            username: string;
          }
        | {
            createdAt: string;
            default: boolean;
            description: string;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }
        | {
            carbonFactor: string;
            createdAt: string;
            gwCode: string;
            id: string;
            name: string;
            updatedAt: string;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: CollectionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: TransactionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            address: Address;
            bankDetails: BankDetails;
            createdAt: string;
            id: string;
            name: string;
            ownerId: string;
            roles: Roles;
            updatedAt: string;
            users: Array<User>;
          }
        | {
            name: string;
            permissions: Permissions;
            subGroups: Array<PermissionGroup>;
          }
      >;
      pagination?: Pagination;
    };
  };

export type PostApiTransactionsAssignMaterialByTransactionIdByMaterialIdResponse =
  PostApiTransactionsAssignMaterialByTransactionIdByMaterialIdResponses[keyof PostApiTransactionsAssignMaterialByTransactionIdByMaterialIdResponses];

export type GetApiTransactionsListMaterialsByTransactionIdData = {
  body?: never;
  path: {
    transactionId: string;
  };
  query: {
    page: number;
    pageSize: number;
    preload?: Array<string>;
    searchTerm?: string;
    searchColumn?: Array<string>;
  };
  url: '/api/transactions/list-materials/{transactionId}';
};

export type GetApiTransactionsListMaterialsByTransactionIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiTransactionsListMaterialsByTransactionIdError =
  GetApiTransactionsListMaterialsByTransactionIdErrors[keyof GetApiTransactionsListMaterialsByTransactionIdErrors];

export type GetApiTransactionsListMaterialsByTransactionIdResponses = {
  /**
   * Material retrieved from Transaction successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiTransactionsListMaterialsByTransactionIdResponse =
  GetApiTransactionsListMaterialsByTransactionIdResponses[keyof GetApiTransactionsListMaterialsByTransactionIdResponses];

export type GetApiTransactionsMaterialsData = {
  body?: never;
  path?: never;
  query: {
    page: number;
    pageSize: number;
    preload?: Array<string>;
    searchTerm?: string;
    searchColumn?: Array<string>;
  };
  url: '/api/transactions/materials';
};

export type GetApiTransactionsMaterialsErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiTransactionsMaterialsError =
  GetApiTransactionsMaterialsErrors[keyof GetApiTransactionsMaterialsErrors];

export type GetApiTransactionsMaterialsResponses = {
  /**
   * Transaction Material's retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiTransactionsMaterialsResponse =
  GetApiTransactionsMaterialsResponses[keyof GetApiTransactionsMaterialsResponses];

export type PostApiTransactionsMaterialsData = {
  /**
   * Payload to create a new transaction material.
   */
  body: CreateTransactionMaterial;
  path?: never;
  query?: never;
  url: '/api/transactions/materials';
};

export type PostApiTransactionsMaterialsErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiTransactionsMaterialsError =
  PostApiTransactionsMaterialsErrors[keyof PostApiTransactionsMaterialsErrors];

export type PostApiTransactionsMaterialsResponses = {
  /**
   * Transaction Material created successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiTransactionsMaterialsResponse =
  PostApiTransactionsMaterialsResponses[keyof PostApiTransactionsMaterialsResponses];

export type DeleteApiTransactionsMaterialsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/transactions/materials/{id}';
};

export type DeleteApiTransactionsMaterialsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type DeleteApiTransactionsMaterialsByIdError =
  DeleteApiTransactionsMaterialsByIdErrors[keyof DeleteApiTransactionsMaterialsByIdErrors];

export type DeleteApiTransactionsMaterialsByIdResponses = {
  /**
   * Transaction Material deleted successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type DeleteApiTransactionsMaterialsByIdResponse =
  DeleteApiTransactionsMaterialsByIdResponses[keyof DeleteApiTransactionsMaterialsByIdResponses];

export type GetApiTransactionsMaterialsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    preload?: Array<string>;
  };
  url: '/api/transactions/materials/{id}';
};

export type GetApiTransactionsMaterialsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiTransactionsMaterialsByIdError =
  GetApiTransactionsMaterialsByIdErrors[keyof GetApiTransactionsMaterialsByIdErrors];

export type GetApiTransactionsMaterialsByIdResponses = {
  /**
   * Transaction Material retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiTransactionsMaterialsByIdResponse =
  GetApiTransactionsMaterialsByIdResponses[keyof GetApiTransactionsMaterialsByIdResponses];

export type PutApiTransactionsMaterialsByIdData = {
  /**
   * Payload to update an existing transaction material.
   */
  body: UpdateTransactionMaterial;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/transactions/materials/{id}';
};

export type PutApiTransactionsMaterialsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PutApiTransactionsMaterialsByIdError =
  PutApiTransactionsMaterialsByIdErrors[keyof PutApiTransactionsMaterialsByIdErrors];

export type PutApiTransactionsMaterialsByIdResponses = {
  /**
   * Transaction Material updated successfully
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PutApiTransactionsMaterialsByIdResponse =
  PutApiTransactionsMaterialsByIdResponses[keyof PutApiTransactionsMaterialsByIdResponses];

export type PostApiTransactionsUnassignMaterialByTransactionIdByMaterialIdData =
  {
    body?: never;
    path: {
      transactionId: string;
      materialId: string;
    };
    query?: never;
    url: '/api/transactions/unassign-material/{transactionId}/{materialId}';
  };

export type PostApiTransactionsUnassignMaterialByTransactionIdByMaterialIdErrors =
  {
    /**
     * Bad Request
     */
    400: {
      error: string;
      message: string;
    };
    /**
     * Unauthorized
     */
    401: {
      error: string;
      message: string;
    };
    /**
     * Forbidden
     */
    403: {
      error: string;
      message: string;
    };
    /**
     * Not Found
     */
    404: {
      error: string;
      message: string;
    };
    /**
     * Internal Server Error
     */
    500: {
      error: string;
      message: string;
    };
    default: unknown;
  };

export type PostApiTransactionsUnassignMaterialByTransactionIdByMaterialIdError =
  PostApiTransactionsUnassignMaterialByTransactionIdByMaterialIdErrors[keyof PostApiTransactionsUnassignMaterialByTransactionIdByMaterialIdErrors];

export type PostApiTransactionsUnassignMaterialByTransactionIdByMaterialIdResponses =
  {
    /**
     * Material unassigned from Transaction successfully.
     */
    200: {
      item?:
        | {
            address: Address;
            bankDetails: BankDetails;
            businessId: string | null;
            businesses: Array<Business>;
            createdAt: string;
            id: string;
            mfaEnabled: boolean;
            mfaVerified: boolean;
            name: string;
            permissions: Array<string>;
            roles: Roles;
            type: 'system' | 'collector' | 'business';
            updatedAt: string;
            username: string;
          }
        | {
            createdAt: string;
            default: boolean;
            description: string;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }
        | {
            carbonFactor: string;
            createdAt: string;
            gwCode: string;
            id: string;
            name: string;
            updatedAt: string;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: CollectionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: TransactionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            address: Address;
            bankDetails: BankDetails;
            createdAt: string;
            id: string;
            name: string;
            ownerId: string;
            roles: Roles;
            updatedAt: string;
            users: Array<User>;
          };
      items?: Array<
        | {
            address: Address;
            bankDetails: BankDetails;
            businessId: string | null;
            businesses: Array<Business>;
            createdAt: string;
            id: string;
            mfaEnabled: boolean;
            mfaVerified: boolean;
            name: string;
            permissions: Array<string>;
            roles: Roles;
            type: 'system' | 'collector' | 'business';
            updatedAt: string;
            username: string;
          }
        | {
            createdAt: string;
            default: boolean;
            description: string;
            id: string;
            name: string;
            permissions: Array<string>;
            updatedAt: string;
          }
        | {
            carbonFactor: string;
            createdAt: string;
            gwCode: string;
            id: string;
            name: string;
            updatedAt: string;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: CollectionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            buyer: Business;
            createdAt: string;
            id: string;
            materials: TransactionMaterials;
            seller: User;
            updatedAt: string;
          }
        | {
            carbonFactor?: string;
            createdAt: string;
            gwCode?: string;
            id: string;
            name?: string;
            updatedAt: string;
            value: number;
            weight: number;
          }
        | {
            address: Address;
            bankDetails: BankDetails;
            createdAt: string;
            id: string;
            name: string;
            ownerId: string;
            roles: Roles;
            updatedAt: string;
            users: Array<User>;
          }
        | {
            name: string;
            permissions: Permissions;
            subGroups: Array<PermissionGroup>;
          }
      >;
      pagination?: Pagination;
    };
  };

export type PostApiTransactionsUnassignMaterialByTransactionIdByMaterialIdResponse =
  PostApiTransactionsUnassignMaterialByTransactionIdByMaterialIdResponses[keyof PostApiTransactionsUnassignMaterialByTransactionIdByMaterialIdResponses];

export type DeleteApiTransactionsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/transactions/{id}';
};

export type DeleteApiTransactionsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type DeleteApiTransactionsByIdError =
  DeleteApiTransactionsByIdErrors[keyof DeleteApiTransactionsByIdErrors];

export type DeleteApiTransactionsByIdResponses = {
  /**
   * Transaction deleted successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type DeleteApiTransactionsByIdResponse =
  DeleteApiTransactionsByIdResponses[keyof DeleteApiTransactionsByIdResponses];

export type GetApiTransactionsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    preload?: Array<string>;
  };
  url: '/api/transactions/{id}';
};

export type GetApiTransactionsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiTransactionsByIdError =
  GetApiTransactionsByIdErrors[keyof GetApiTransactionsByIdErrors];

export type GetApiTransactionsByIdResponses = {
  /**
   * Transaction retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiTransactionsByIdResponse =
  GetApiTransactionsByIdResponses[keyof GetApiTransactionsByIdResponses];

export type PutApiTransactionsByIdData = {
  /**
   * Payload to update an existing transaction.
   */
  body: UpdateTransaction;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/transactions/{id}';
};

export type PutApiTransactionsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PutApiTransactionsByIdError =
  PutApiTransactionsByIdErrors[keyof PutApiTransactionsByIdErrors];

export type PutApiTransactionsByIdResponses = {
  /**
   * Transaction updated successfully
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PutApiTransactionsByIdResponse =
  PutApiTransactionsByIdResponses[keyof PutApiTransactionsByIdResponses];

export type GetApiUsersData = {
  body?: never;
  path?: never;
  query: {
    page: number;
    pageSize: number;
    preload?: Array<string>;
    searchTerm?: string;
    searchColumn?: Array<string>;
  };
  url: '/api/users';
};

export type GetApiUsersErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiUsersError = GetApiUsersErrors[keyof GetApiUsersErrors];

export type GetApiUsersResponses = {
  /**
   * User's retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiUsersResponse =
  GetApiUsersResponses[keyof GetApiUsersResponses];

export type PostApiUsersData = {
  /**
   * Payload to create a new user.
   */
  body: CreateUser;
  path?: never;
  query?: never;
  url: '/api/users';
};

export type PostApiUsersErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiUsersError = PostApiUsersErrors[keyof PostApiUsersErrors];

export type PostApiUsersResponses = {
  /**
   * User created successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiUsersResponse =
  PostApiUsersResponses[keyof PostApiUsersResponses];

export type PostApiUsersAssignRoleByUserIdByRoleIdData = {
  body?: never;
  path: {
    userId: string;
    roleId: string;
  };
  query?: never;
  url: '/api/users/assign-role/{userId}/{roleId}';
};

export type PostApiUsersAssignRoleByUserIdByRoleIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiUsersAssignRoleByUserIdByRoleIdError =
  PostApiUsersAssignRoleByUserIdByRoleIdErrors[keyof PostApiUsersAssignRoleByUserIdByRoleIdErrors];

export type PostApiUsersAssignRoleByUserIdByRoleIdResponses = {
  /**
   * Role assigned to User successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiUsersAssignRoleByUserIdByRoleIdResponse =
  PostApiUsersAssignRoleByUserIdByRoleIdResponses[keyof PostApiUsersAssignRoleByUserIdByRoleIdResponses];

export type GetApiUsersListRolesByUserIdData = {
  body?: never;
  path: {
    userId: string;
  };
  query: {
    page: number;
    pageSize: number;
    preload?: Array<string>;
    searchTerm?: string;
    searchColumn?: Array<string>;
  };
  url: '/api/users/list-roles/{userId}';
};

export type GetApiUsersListRolesByUserIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiUsersListRolesByUserIdError =
  GetApiUsersListRolesByUserIdErrors[keyof GetApiUsersListRolesByUserIdErrors];

export type GetApiUsersListRolesByUserIdResponses = {
  /**
   * Role retrieved from User successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiUsersListRolesByUserIdResponse =
  GetApiUsersListRolesByUserIdResponses[keyof GetApiUsersListRolesByUserIdResponses];

export type PostApiUsersUnassignRoleByUserIdByRoleIdData = {
  body?: never;
  path: {
    userId: string;
    roleId: string;
  };
  query?: never;
  url: '/api/users/unassign-role/{userId}/{roleId}';
};

export type PostApiUsersUnassignRoleByUserIdByRoleIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PostApiUsersUnassignRoleByUserIdByRoleIdError =
  PostApiUsersUnassignRoleByUserIdByRoleIdErrors[keyof PostApiUsersUnassignRoleByUserIdByRoleIdErrors];

export type PostApiUsersUnassignRoleByUserIdByRoleIdResponses = {
  /**
   * Role unassigned from User successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PostApiUsersUnassignRoleByUserIdByRoleIdResponse =
  PostApiUsersUnassignRoleByUserIdByRoleIdResponses[keyof PostApiUsersUnassignRoleByUserIdByRoleIdResponses];

export type DeleteApiUsersByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/users/{id}';
};

export type DeleteApiUsersByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type DeleteApiUsersByIdError =
  DeleteApiUsersByIdErrors[keyof DeleteApiUsersByIdErrors];

export type DeleteApiUsersByIdResponses = {
  /**
   * User deleted successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type DeleteApiUsersByIdResponse =
  DeleteApiUsersByIdResponses[keyof DeleteApiUsersByIdResponses];

export type GetApiUsersByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    preload?: Array<string>;
  };
  url: '/api/users/{id}';
};

export type GetApiUsersByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type GetApiUsersByIdError =
  GetApiUsersByIdErrors[keyof GetApiUsersByIdErrors];

export type GetApiUsersByIdResponses = {
  /**
   * User retrieved successfully.
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type GetApiUsersByIdResponse =
  GetApiUsersByIdResponses[keyof GetApiUsersByIdResponses];

export type PutApiUsersByIdData = {
  /**
   * Payload to update an existing user.
   */
  body: UpdateUser;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/users/{id}';
};

export type PutApiUsersByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    error: string;
    message: string;
  };
  /**
   * Unauthorized
   */
  401: {
    error: string;
    message: string;
  };
  /**
   * Forbidden
   */
  403: {
    error: string;
    message: string;
  };
  /**
   * Not Found
   */
  404: {
    error: string;
    message: string;
  };
  /**
   * Internal Server Error
   */
  500: {
    error: string;
    message: string;
  };
  default: unknown;
};

export type PutApiUsersByIdError =
  PutApiUsersByIdErrors[keyof PutApiUsersByIdErrors];

export type PutApiUsersByIdResponses = {
  /**
   * User updated successfully
   */
  200: {
    item?:
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        };
    items?: Array<
      | {
          address: Address;
          bankDetails: BankDetails;
          businessId: string | null;
          businesses: Array<Business>;
          createdAt: string;
          id: string;
          mfaEnabled: boolean;
          mfaVerified: boolean;
          name: string;
          permissions: Array<string>;
          roles: Roles;
          type: 'system' | 'collector' | 'business';
          updatedAt: string;
          username: string;
        }
      | {
          createdAt: string;
          default: boolean;
          description: string;
          id: string;
          name: string;
          permissions: Array<string>;
          updatedAt: string;
        }
      | {
          carbonFactor: string;
          createdAt: string;
          gwCode: string;
          id: string;
          name: string;
          updatedAt: string;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: CollectionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          buyer: Business;
          createdAt: string;
          id: string;
          materials: TransactionMaterials;
          seller: User;
          updatedAt: string;
        }
      | {
          carbonFactor?: string;
          createdAt: string;
          gwCode?: string;
          id: string;
          name?: string;
          updatedAt: string;
          value: number;
          weight: number;
        }
      | {
          address: Address;
          bankDetails: BankDetails;
          createdAt: string;
          id: string;
          name: string;
          ownerId: string;
          roles: Roles;
          updatedAt: string;
          users: Array<User>;
        }
      | {
          name: string;
          permissions: Permissions;
          subGroups: Array<PermissionGroup>;
        }
    >;
    pagination?: Pagination;
  };
};

export type PutApiUsersByIdResponse =
  PutApiUsersByIdResponses[keyof PutApiUsersByIdResponses];

export type ClientOptions = {
  baseUrl: 'http://localhost:6173' | 'https://3reco.co.za' | (string & {});
};
